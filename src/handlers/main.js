const {bot} = require('../bot')


bot.onText(/\/felicidade/, (msg) => {
    const chatId = msg.chat.id;
    const message = msg.text;
    
    // Define a porcentagem de felicidade aleatoriamente entre 0 e 100
    const felicidade = Math.floor(Math.random() * 101);
  
    // Define uma frase baseada na porcentagem de felicidade
    let frase;
    if (felicidade <= 20) {
      frase = 'Estou me sentindo um pouco triste hoje...';
    } else if (felicidade <= 40) {
      frase = 'N√£o estou muito feliz...';
    } else if (felicidade <= 60) {
        frase = 'Estou me sentindo feliz.';
    } else if (felicidade <= 80) {
        frase = 'Estou me sentindo muito feliz!';
    } else {
      frase = 'Estou me sentindo extremamente feliz!!!';
    }
  
    // Define o emoji baseado na porcentagem de felicidade
    let emoji;
    if (felicidade <= 20) {
      emoji = 'üòî';
    } else if (felicidade <= 40) {
        emoji = 'üòï'
      } else if (felicidade <= 60) {
        emoji = 'üòä'
      } else if (felicidade <= 80) {
        emoji = 'üòÉ'
    } else {
      emoji = 'üòÉ';
    }
  
    // Cria um gr√°fico de barra com a porcentagem de felicidade
    let grafico = '';
    for (let i = 0; i < 10; i++) {
      if (felicidade >= i * 10) {
        grafico += 'üü©';
      } else {
        grafico += '‚¨úÔ∏è';
      }
    }
  
    // Cria a mensagem de resposta com a frase, o emoji e o gr√°fico
    const resposta = `*N√≠vel de Felicidade* \n\nSua felicidade hoje est√° em ${felicidade}% \n\n${frase}${emoji}\n${grafico} *${felicidade}%*`;
  
    // Envia a mensagem de resposta para o usu√°rio que enviou o comando /felicidade
    bot.sendMessage(msg.chat.id, resposta, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
});




bot.onText(/\/raiva/, (msg) => {
    // Gerando o n√≠vel de raiva aleat√≥rio entre 0 e 100
    const nivelRaiva = Math.floor(Math.random() * 101);
  
    // Definindo a frase de acordo com o n√≠vel de raiva
    let fraseRaiva;
    if (nivelRaiva <= 25) {
      fraseRaiva = "Estou calmo como um monge.";
    } else if (nivelRaiva <= 40) {
      fraseRaiva = "N√£o sinto raiva";
    } else if (nivelRaiva <= 60) {
      fraseRaiva = "Estou um pouco irritado.";
    } else if (nivelRaiva <= 80) {
      fraseRaiva = "Estou um muito irritado.";
    } else if (nivelRaiva <= 90) {
      fraseRaiva = "Estou bastante irritado!";
    } else {
      fraseRaiva = "Eu estou prestes a explodir!!!";
    }
  
    // Definindo o emoji de acordo com o n√≠vel de raiva
    let emojiRaiva;
    if (nivelRaiva <= 25) {
      emojiRaiva = "üòå";
    } else if (nivelRaiva <= 40) {
      emojiRaiva = "üòê";
    } else if (nivelRaiva <= 60) {
      emojiRaiva = "üò†";
    } else if (nivelRaiva <= 50) {
      emojiRaiva = "üò§";
    } else if (nivelRaiva <= 75) {
      emojiRaiva = "üò°";
    } else {
      emojiRaiva = "ü§¨";
    }
  
    // Cria um gr√°fico de barra com a porcentagem de raiva
    let graficoRaiva = '';
    for (let i = 0; i < 10; i++) {
      if (nivelRaiva >= i * 10) {
        graficoRaiva += 'üüß';
      } else {
        graficoRaiva += '‚¨úÔ∏è';
      }
    }
  
    // Cria a mensagem de resposta com a frase, o emoji e o gr√°fico
    const respostaRaiva = `*N√≠vel de raiva* \n\nSua raiva hoje est√° em ${nivelRaiva}% \n\n${fraseRaiva}${emojiRaiva}\n${graficoRaiva} *${nivelRaiva}%*`;
  
    // Envia a mensagem de resposta para o usu√°rio que enviou o comando /raiva
    bot.sendMessage(msg.chat.id, respostaRaiva, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
  });



  bot.onText(/\/apaixonado/, (msg) => {
    // Gerando o n√≠vel de paix√£o aleat√≥rio entre 0 e 100
    const nivelPaixao = Math.floor(Math.random() * 101);
    
    // Definindo a frase de acordo com o n√≠vel de paix√£o
    let frasePaixao;
    if (nivelPaixao <= 20) {
      frasePaixao = "N√£o estou apaixonado(a) por ningu√©m no momento.";
    } else if (nivelPaixao <= 40) {
      frasePaixao = "Estou come√ßando a sentir algo por algu√©m.";
    } else if (nivelPaixao <= 60) {
      frasePaixao = "S√≥ penso nele(a), afs.";
    } else if (nivelPaixao <= 80) {
      frasePaixao = "J√° n√£o sai da minha mente, to bobinho(a) de apaxionado(a).";
    } else if (nivelPaixao <= 90) {
      frasePaixao = "Estou completamente apaixonado(a)!";
    } else {
      frasePaixao = "Eu nunca me senti assim antes, estou perdidamente apaixonado(a)!!!";
    }
    
    // Definindo o emoji de acordo com o n√≠vel de paix√£o
    let emojiPaixao;
    if (nivelPaixao <= 20) {
      emojiPaixao = "üòê";
    } else if (nivelPaixao <= 40) {
      emojiPaixao = "üòª";
    } else if (nivelPaixao <= 60) {
      emojiPaixao = "üòç";
    } else if (nivelPaixao <= 80) {
      emojiPaixao = "üíó";
    } else if (nivelPaixao <= 75) {
      emojiPaixao = "‚ù§Ô∏è‚Äçüî•";
    } else {
      emojiPaixao = "üíò";
    }
    
    // Cria um gr√°fico de barra com a porcentagem de paix√£o
    let graficoPaixao = '';
    for (let i = 0; i < 10; i++) {
      if (nivelPaixao >= i * 10) {
        graficoPaixao += 'üü•';
      } else {
        graficoPaixao += '‚¨úÔ∏è';
      }
    }
    
    // Cria a mensagem de resposta com a frase, o emoji e o gr√°fico
    const respostaPaixao = `*N√≠vel de paix√£o*\n\nO meu n√≠vel de paix√£o est√° em ${nivelPaixao}%\n\n${frasePaixao}${emojiPaixao}\n${graficoPaixao} *${nivelPaixao}%*`;
    
    // Envia a mensagem de resposta para o usu√°rio que enviou o comando /apaixonado
    bot.sendMessage(msg.chat.id, respostaPaixao, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
  });
  



  bot.onText(/\/chato/, (msg) => {
    // Gera aleatoriamente o n√≠vel de chatice entre 0 e 100
    const nivelGado = Math.floor(Math.random() * 101);
  
    // Define a frase de acordo com o n√≠vel de chatice
    let fraseGado;
    if (nivelGado <= 10) {
      fraseGado = "N√£o estou sendo chato(a) com ningu√©m no momento.";
    } else if (nivelGado <= 20) {
      fraseGado = "Chatice? N√£o sou nunca!";
    } else if (nivelGado <= 40) {
      fraseGado = "Estou sendo um pouco chato(a), mas prometo melhorar!";
    } else if (nivelGado <= 50) {
      fraseGado = "Nem sou chato(a) e nem Legal!";
    } else if (nivelGado <= 70) {
      fraseGado = "Chato mesmo, ent√£o ature ou surte!";
    } else if (nivelGado <= 80) {
      fraseGado = "Chatice? √â comigo mesmo!";
    } else if (nivelGado <= 90) {
      fraseGado = "Estou sendo bastante chato(a) ultimamente...";
    } else {
      fraseGado = "Eu sou um verdadeiro(a) chato(a), me desculpe!";
    }
  
    // Define o emoji de acordo com o n√≠vel de chatice
    let emojiGado;
    if (nivelGado <= 20) {
      emojiGado = "üòê";
    } else if (nivelGado <= 40) {
      emojiGado = "üòí";
    } else if (nivelGado <= 60) {
      emojiGado = "üò§";
    } else if (nivelGado <= 80) {
      emojiGado = "ü§®";
    } else if (nivelGado <= 95) {
      emojiGado = "üôÑ";
    } else {
      emojiGado = "ü§Ø";
    }
  
    // Cria um gr√°fico vertical com a porcentagem de chatice
    let graficoGado = '';
    for (let i = 10; i <= 100; i += 10) {
      if (nivelGado >= i) {
        graficoGado += 'üü´';
      } else {
        graficoGado += '‚¨úÔ∏è';
      }
    }
  
    // Cria a mensagem de resposta com a frase, o emoji e o gr√°fico vertical
    const respostaGado = `*N√≠vel de chatice*\n\nO meu n√≠vel de chatice est√° em ${nivelGado}%\n\n${fraseGado}${emojiGado}\n${graficoGado} *${nivelGado}%*`;
  
    // Envia a mensagem de resposta para o usu√°rio que enviou o comando /chato
    bot.sendMessage(msg.chat.id, respostaGado, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
  })
  





  const estados = [
    {
      nome: 'Acre',
      frase: 'Acre, o estado da borracha',
      info: 'O Acre √© um estado brasileiro localizado na regi√£o Norte, conhecido por sua produ√ß√£o de borracha natural.',
      gria: 'Espocar',
      emoji: 'üå≥'
    },
    {
      nome: 'Alagoas',
      frase: 'Alagoas, o para√≠so das √°guas',
      info: 'Alagoas √© um estado brasileiro localizado na regi√£o Nordeste, conhecido por suas belas praias e lagoas.',
      gria: 'arretado',
      emoji: 'üèñ'
    },
    {
      nome: 'Amazonas',
      frase: 'Amazonas, o pulm√£o do mundo',
      info: 'O Amazonas √© um estado brasileiro localizado na regi√£o Norte, conhecido por sua extensa floresta amaz√¥nica e diversidade de fauna e flora.',
      gria: 'n√£o tem gria conhecida',
      emoji: 'üå¥'
    },
    {
      nome: 'Bahia',
      frase: 'Bahia, terra de todos os santos',
      info: 'A Bahia √© um estado brasileiro localizado na regi√£o Nordeste, conhecido por sua rica cultura afro-brasileira e pelas belas praias.',
      gria: 'LAELE',
      emoji: 'üåä'
    },
    {
      nome: 'Cear√°',
      frase: 'Cear√°, terra da luz',
      info: 'O Cear√° √© um estado brasileiro localizado na regi√£o Nordeste, conhecido por suas belas praias, dunas e sol o ano todo.',
      gria: 'arretado',
      emoji: 'üåÖ'
    },
    {
      nome: 'Esp√≠rito Santo',
      frase: 'Esp√≠rito Santo, o estado do cacau',
      info: 'O Esp√≠rito Santo √© um estado brasileiro localizado na regi√£o Sudeste, conhecido por sua produ√ß√£o de cacau e pelas belas praias.',
      gria: 'firmeza',
      emoji: 'üç´'
    },
    {
      nome: 'Goi√°s',
      frase: 'Goi√°s, o cora√ß√£o do Brasil',
      info: 'Goi√°s √© um estado brasileiro localizado na regi√£o Centro-Oeste, conhecido por sua rica hist√≥ria colonial e por suas belas paisagens naturais.',
      gria: 'b√£o demais',
      emoji: 'üèú'
    },
    {
      nome: 'Maranh√£o',
      frase: 'Maranh√£o, o estado dos len√ß√≥is',
      info: 'O Maranh√£o √© um estado brasileiro localizado na regi√£o Nordeste, conhecido por suas belas praias, parques naturais e pelos famosos Len√ß√≥is Maranhenses.',
      gria: 'massa',
      emoji: 'üèû'
    },
    {
      nome: 'Mato Grosso',
      frase: 'Mato Grosso, a grande plan√≠cie',
      info: 'O Mato Grosso √© um estado brasileiro localizado na regi√£o Centro-Oeste, conhecido por sua vasta plan√≠cie e pela biodiversidade de animais.',
      gria: 'tudo de bom',
      emoji: 'üåø'
    },
    {
    nome: 'Mato Grosso do Sul',
    frase: 'Mato Grosso do Sul, o estado do Pantanal',
    info: 'Mato Grosso do Sul √© um estado brasileiro localizado na regi√£o Centro-Oeste, conhecido por abrigar o maior pantanal do mundo e pelas belas paisagens naturais.',
    gria: 'firmeza',
    emoji: 'üêÜ'
    },
    {
    nome: 'Minas Gerais',
    frase: 'Minas Gerais, terra do p√£o de queijo',
    info: 'Minas Gerais √© um estado brasileiro localizado na regi√£o Sudeste, conhecido por sua rica hist√≥ria, culin√°ria e pela Serra do Curral, s√≠mbolo da capital Belo Horizonte.',
    gria: 'uai',
    emoji: 'üßÄ'
    },
    {
    nome: 'Par√°',
    frase: 'Par√°, a porta da Amaz√¥nia',
    info: 'O Par√° √© um estado brasileiro localizado na regi√£o Norte, conhecido por sua exuberante floresta amaz√¥nica, rica cultura e gastronomia.',
    gria: 'bacana',
    emoji: 'üç¥'
    },
    {
    nome: 'Para√≠ba',
    frase: 'Para√≠ba, o estado do sol nascente',
    info: 'A Para√≠ba √© um estado brasileiro localizado na regi√£o Nordeste, conhecido por suas belas praias, pela gastronomia e pelo folclore.',
    gria: 'bora',
    emoji: '‚òÄÔ∏è'
    },
    {
    nome: 'Paran√°',
    frase: 'Paran√°, estado das Cataratas',
    info: 'O Paran√° √© um estado brasileiro localizado na regi√£o Sul, conhecido por suas belas paisagens naturais, como as Cataratas do Igua√ßu e pela produ√ß√£o agropecu√°ria.',
    gria: 'piazada',
    emoji: 'üå≤'
    },
    {
    nome: 'Pernambuco',
    frase: 'Pernambuco, a terra do frevo',
    info: 'Pernambuco √© um estado brasileiro localizado na regi√£o Nordeste, conhecido por sua rica cultura, pelo frevo, pelo maracatu e pelas belas praias.',
    gria: 'boy',
    emoji: 'üé≠'
    },
    {
    nome: 'Piau√≠',
    frase: 'Piau√≠, o estado das emo√ß√µes',
    info: 'O Piau√≠ √© um estado brasileiro localizado na regi√£o Nordeste, conhecido por suas paisagens ex√≥ticas, pela rica hist√≥ria e cultura.',
    gria: 'firmeza',
    emoji: 'üåµ'
    },
    {
    nome: 'Rio de Janeiro',
    frase: 'Rio de Janeiro, cidade maravilhosa',
    info: 'O Rio de Janeiro √© um estado brasileiro localizado na regi√£o Sudeste, conhecido por suas belas praias, montanhas e pela cidade do Rio de Janeiro, que √© mundialmente famosa por seu carnaval, Cristo Redentor e P√£o de A√ß√∫car.',
    gria: 'os crias',
    emoji: 'üèñÔ∏è'
    },
    {
      nome: 'Rio Grande do Norte',
      frase: 'Rio Grande do Norte, o estado do sol',
      info: 'Rio Grande do Norte √© um estado brasileiro localizado na regi√£o Nordeste, conhecido por suas praias paradis√≠acas, pelo clima quente e pelas dunas de areia.',
      gria: 'valeu a pena',
      emoji: 'üåû'
      },
      {
      nome: 'Rio Grande do Sul',
      frase: 'Rio Grande do Sul, o estado dos ga√∫chos',
      info: 'Rio Grande do Sul √© um estado brasileiro localizado na regi√£o Sul, conhecido por sua forte tradi√ß√£o cultural ga√∫cha, pelos vinhedos da Serra Ga√∫cha e pelos c√¢nions do Parque Nacional de Aparados da Serra.',
      gria: 'tch√™',
      emoji: 'üêÑ'
      },
      {
      nome: 'Rond√¥nia',
      frase: 'Rond√¥nia, o estado da Amaz√¥nia Ocidental',
      info: 'Rond√¥nia √© um estado brasileiro localizado na regi√£o Norte, conhecido por abrigar uma parte da floresta amaz√¥nica e por sua produ√ß√£o de caf√© e carne.',
      gria: 'da hora',
      emoji: 'ü¶ú'
      },
      {
      nome: 'Roraima',
      frase: 'Roraima, o estado das √°guas',
      info: 'Roraima √© um estado brasileiro localizado na regi√£o Norte, conhecido por sua diversidade cultural, por sua biodiversidade e por ser o estado mais setentrional do Brasil.',
      gria: 'suave',
      emoji: 'üèûÔ∏è'
      },
      {
      nome: 'Santa Catarina',
      frase: 'Santa Catarina, o estado das praias e da serra',
      info: 'Santa Catarina √© um estado brasileiro localizado na regi√£o Sul, conhecido por suas belas praias, pela Serra Catarinense e pela produ√ß√£o de vinho e de ostras.',
      gria: 'teia',
      emoji: 'üèîÔ∏è'
      },
      {
      nome: 'S√£o Paulo',
      frase: 'S√£o Paulo, a locomotiva do Brasil',
      info: 'S√£o Paulo √© um estado brasileiro localizado na regi√£o Sudeste, conhecido por sua grande metr√≥pole, por sua forte economia, por suas universidades e pela cultura cosmopolita.',
      gria: 'mano',
      emoji: 'üèôÔ∏è'
      },
      {
      nome: 'Sergipe',
      frase: 'Sergipe, o estado do canga√ßo',
      info: 'Sergipe √© um estado brasileiro localizado na regi√£o Nordeste, conhecido por sua rica hist√≥ria do canga√ßo, pelas praias e pelo folclore.',
      gria: 'bora',
      emoji: 'üå¥'
      },
      {
      nome: 'Tocantins',
      frase: 'Tocantins, o cora√ß√£o do Brasil',
      info: 'Tocantins √© um estado brasileiro localizado na regi√£o Norte, conhecido por sua biodiversidade, pelas cachoeiras e pela produ√ß√£o de gr√£os e carne.',
      gria: 'show de bola',
      emoji: 'üåª'
      },
      ];
  
  bot.onText(/\/estado/, (msg) => {
    const chatId = msg.chat.id;
    const estadoAleatorio = estados[Math.floor(Math.random() * estados.length)];
    const resposta = `*Seu Estado √© ${estadoAleatorio.nome}* ${estadoAleatorio.emoji} \n\n*Informa√ß√µes b√°sicas:* ${estadoAleatorio.info}\n\n*G√≠ria t√≠pica:* "${estadoAleatorio.gria}" \n\nüåé ${estadoAleatorio.frase}`;
    bot.sendMessage(chatId, resposta, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
  });
  



  bot.onText(/\/gado/, (msg) => {
    // Gera aleatoriamente o n√≠vel de chatice entre 0 e 100
    const nivelGado = Math.floor(Math.random() * 101);
  
    // Define a frase de acordo com o n√≠vel de chatice
    let fraseGado;
    if (nivelGado <= 10) {
      fraseGado = "N√£o estou sendo gado(a) com ningu√©m no momento.";
    } else if (nivelGado <= 20) {
      fraseGado = "gado(a)? Nunca nem fui!";
    } else if (nivelGado <= 40) {
      fraseGado = "Gado(a) nem nos sonhos kkkkk!";
    } else if (nivelGado <= 50) {
      fraseGado = "Laele, sou gado n√£o fi!";
    } else if (nivelGado <= 70) {
      fraseGado = "Sou gadinho, meu chifres est√£o nascendo!";
    } else if (nivelGado <= 80) {
      fraseGado = "Estou at√© mugiando, muuuuuuu!";
    } else if (nivelGado <= 90) {
      fraseGado = "N√£o posso ver uma gadice, que j√° quero passar kkk!";
    } else {
      fraseGado = "Sou um gado(a) supremo!!!";
    }
  
    // Define o emoji de acordo com o n√≠vel de chatice
    let emojiGado;
    if (nivelGado <= 20) {
      emojiGado = "üòê";
    } else if (nivelGado <= 40) {
      emojiGado = "üòÑ";
    } else if (nivelGado <= 60) {
      emojiGado = "üåö";
    } else if (nivelGado <= 80) {
      emojiGado = "üëÄ";
    } else if (nivelGado <= 95) {
      emojiGado = "üêÆ";
    } else {
      emojiGado = "üêÇ";
    }
  
    // Cria um gr√°fico vertical com a porcentagem de chatice
    let graficoGado = '';
    for (let i = 10; i <= 100; i += 10) {
      if (nivelGado >= i) {
        graficoGado += 'üü´';
      } else {
        graficoGado += '‚¨úÔ∏è';
      }
    } 
  
    // Cria a mensagem de resposta com a frase, o emoji e o gr√°fico vertical
    const respostaGado = `*N√≠vel de gado*\n\nA sua gadice est√° em ${nivelGado}%\n\n${fraseGado}${emojiGado}\n${graficoGado} *${nivelGado}%*`;
  
    // Envia a mensagem de resposta para o usu√°rio que enviou o comando /chato
    bot.sendMessage(msg.chat.id, respostaGado, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
  })
  


  function gerarDataAleatoria() {
    // Seleciona um ano aleat√≥rio entre 2024 e 2050
    const ano = Math.floor(Math.random() * (2050 - 2024 + 1)) + 2024;
    // Seleciona um m√™s aleat√≥rio entre 0 e 11 (0 = janeiro, 11 = dezembro)
    const mes = Math.floor(Math.random() * 12);
    // Seleciona um dia aleat√≥rio entre 1 e 28
    let dia = Math.floor(Math.random() * 28) + 1;
    
    // Verifica se o m√™s selecionado √© fevereiro
    if (mes === 1) {
      // Se for, verifica se o ano √© bissexto (divis√≠vel por 4 e n√£o por 100, ou divis√≠vel por 400)
      const bissexto = (ano % 4 === 0 && ano % 100 !== 0) || ano % 400 === 0;
      // Se for bissexto, o dia m√°ximo √© 29, caso contr√°rio, √© 28
      dia = bissexto ? Math.min(dia, 29) : Math.min(dia, 28);
    // Verifica se o m√™s selecionado √© abril, junho, setembro ou novembro (meses com 30 dias)
    } else if ([3, 5, 8, 10].includes(mes)) {
      // Se for, o dia m√°ximo √© 30
      dia = Math.min(dia, 30);
    }
    
    // Retorna a data como uma string formatada "DD/MM/AAAA"
    return `${dia.toString().padStart(2, '0')}/${(mes+1).toString().padStart(2, '0')}/${ano}`;
  }
  
  const datasCasamento = [
    { data: gerarDataAleatoria(), emoji: 'üíç' },
    { data: gerarDataAleatoria(), emoji: 'üë∞' },
    { data: gerarDataAleatoria(), emoji: 'ü§µ' },
    { data: gerarDataAleatoria(), emoji: '‚ù§Ô∏è' },
  ];
  
  function selecionaCasamentoAleatorio() {
    return datasCasamento[Math.floor(Math.random() * datasCasamento.length)];
  }
  
  bot.onText(/\/casamento/, (msg) => {
    const chatId = msg.chat.id;
  
    const casamento = selecionaCasamentoAleatorio();
    const respostacasamento = `*Data do casamento*\n\nVoc√™ ir√° se casar em ${casamento.data} ${casamento.emoji} \n\nüë©‚Äç‚ù§Ô∏è‚Äçüë® Parab√©ns, j√° sabe com quem vai ser?`;

    bot.sendMessage(chatId, respostacasamento, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
  });
  
  
  
  
  

  function gerarDataAleatoriaNascimento() {
    // Seleciona um ano aleat√≥rio entre 1970 e 2005
    const ano = Math.floor(Math.random() * (2005 - 1970 + 1)) + 1970;
    // Seleciona um m√™s aleat√≥rio entre 0 e 11 (0 = janeiro, 11 = dezembro)
    const mes = Math.floor(Math.random() * 12);
    // Seleciona um dia aleat√≥rio entre 1 e 28
    let dia = Math.floor(Math.random() * 28) + 1;
    
    // Verifica se o m√™s selecionado √© fevereiro
    if (mes === 1) {
      // Se for, verifica se o ano √© bissexto (divis√≠vel por 4 e n√£o por 100, ou divis√≠vel por 400)
      const bissexto = (ano % 4 === 0 && ano % 100 !== 0) || ano % 400 === 0;
      // Se for bissexto, o dia m√°ximo √© 29, caso contr√°rio, √© 28
      dia = bissexto ? Math.min(dia, 29) : Math.min(dia, 28);
    // Verifica se o m√™s selecionado √© abril, junho, setembro ou novembro (meses com 30 dias)
    } else if ([3, 5, 8, 10].includes(mes)) {
      // Se for, o dia m√°ximo √© 30
      dia = Math.min(dia, 30);
    }
    
    // Retorna a data como uma string formatada "DD/MM/AAAA"
    return `${dia.toString().padStart(2, '0')}/${(mes+1).toString().padStart(2, '0')}/${ano}`;
  }
  
  const datasNascimento = [
    { data: gerarDataAleatoriaNascimento(), emoji: 'üë∂' },
    { data: gerarDataAleatoriaNascimento(), emoji: 'üéÇ' },
    { data: gerarDataAleatoriaNascimento(), emoji: 'üéâ' },
    { data: gerarDataAleatoriaNascimento(), emoji: 'üéÅ' },
  ];
  
  function selecionaNascimentoAleatorio() {
    return datasNascimento[Math.floor(Math.random() * datasNascimento.length)];
  }
  
  bot.onText(/\/nascimento/, (msg) => {
    const chatId = msg.chat.id;
  
    const nascimento = selecionaNascimentoAleatorio();

    const respostanascimento = `*Data do seu nascimento*\n\nVoc√™ nasceu em ${nascimento.data} ${nascimento.emoji}`;

  
    bot.sendMessage(chatId, respostanascimento, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
  });




 



  function gerarDataAleatoriaMorte() {
    // Seleciona um ano aleat√≥rio entre 1970 e 2005
    const ano = Math.floor(Math.random() * (2024 - 2023 + 1)) + 2023;
    // Seleciona um m√™s aleat√≥rio entre 0 e 11 (0 = janeiro, 11 = dezembro)
    const mes = Math.floor(Math.random() * 12);
    // Seleciona um dia aleat√≥rio entre 1 e 28
    let dia = Math.floor(Math.random() * 28) + 1;
    
    // Verifica se o m√™s selecionado √© fevereiro
    if (mes === 1) {
      // Se for, verifica se o ano √© bissexto (divis√≠vel por 4 e n√£o por 100, ou divis√≠vel por 400)
      const bissexto = (ano % 4 === 0 && ano % 100 !== 0) || ano % 400 === 0;
      // Se for bissexto, o dia m√°ximo √© 29, caso contr√°rio, √© 28
      dia = bissexto ? Math.min(dia, 29) : Math.min(dia, 28);
    // Verifica se o m√™s selecionado √© abril, junho, setembro ou novembro (meses com 30 dias)
    } else if ([3, 5, 8, 10].includes(mes)) {
      // Se for, o dia m√°ximo √© 30
      dia = Math.min(dia, 30);
    }
    
    // Retorna a data como uma string formatada "DD/MM/AAAA"
    return `${dia.toString().padStart(2, '0')}/${(mes+1).toString().padStart(2, '0')}/${ano}`;
  } 
  
  const datasMorte = [
    { data1: gerarDataAleatoriaMorte(), emoji2: 'üòµ' },
    { data1: gerarDataAleatoriaMorte(), emoji2: 'üíÄ' },
    { data1: gerarDataAleatoriaMorte(), emoji2: 'üëª' },
    { data1: gerarDataAleatoriaMorte(), emoji2: '‚ò†Ô∏è' },
  ];
  
  function selecionaMorteAleatorio() {
    return datasMorte[Math.floor(Math.random() * datasMorte.length)];
  }
  
  bot.onText(/\/morte/, (msg) => {
    const chatId = msg.chat.id;
  
    const morte = selecionaMorteAleatorio();

    const respostamorte = `*Data da sua morte*\n\nVoc√™ morrer√° em ${morte.data1} ${morte.emoji2}`;

  
    bot.sendMessage(chatId, respostamorte, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
  });



  bot.onText(/\/genero/, (msg) => {
    const generos = [
      {nome: 'Heterossexual', emoji: 'üë´'},
      {nome: 'Homossexual', emoji: 'üë¨üë≠'},
      {nome: 'Bissexual', emoji: 'üë¨üë≠üë´'},
      {nome: 'Pansexual', emoji: 'üë¨üë≠üë´üíñ'},
      {nome: 'Assexual', emoji: 'üö´üçÜüíè'},
      {nome: 'Demissexual', emoji: 'üíëüë¨üë≠'},
      {nome: 'Graysexual', emoji: 'üë•üîò'},
      {nome: 'Polissexual', emoji: 'üë•üë•üë¨üë≠'},
      {nome: 'Queer', emoji: 'üè≥Ô∏è‚Äçüåà'},
      {nome: 'Arom√¢ntico', emoji: '‚ù§Ô∏èüö´'},
      {nome: 'Big√™nero', emoji: '‚ö•'},
      {nome: 'N√£o-bin√°rio', emoji: 'üöª'},
      {nome: 'G√™nero-fluido', emoji: 'üåä'},
      {nome: 'Transg√™nero', emoji: 'üè≥Ô∏è‚Äç‚ößÔ∏è'},
      {nome: 'Cisg√™nero', emoji: '‚ôÇÔ∏è‚ôÄÔ∏è'},
      {nome: 'Intersexo', emoji: '‚öß'},
      {nome: 'Dois-esp√≠ritos', emoji: 'üè≥Ô∏è‚Äç‚ößÔ∏è'},
      {nome: 'Transexual', emoji: 'üöªüîÄ'},
    ];
    const genero = generos[Math.floor(Math.random() * generos.length)];

    const respostagenero = `O g√™nero sexual escolhido √© *${genero.nome} ${genero.emoji}*`;


    bot.sendMessage(msg.chat.id, respostagenero, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
  });
  

  bot.onText(/\/filho/, (msg, match) => {
    // Escolhe um nome e um g√™nero aleatoriamente
    const generos = ['masculino', 'feminino'];
    const genero = generos[Math.floor(Math.random() * generos.length)];
    const nomesMasculinos = ['Pedro', 'Jo√£o', 'Miguel', 'Lucas', 'Rafael', 'Gustavo', 'Thiago', 'Arthur', 'Enzo', 'Leonardo'];
    const nomesFemininos = ['Maria', 'Ana', 'Sofia', 'Lara', 'Gabriela', 'Julia', 'Mariana', 'Isabela', 'Manuela', 'Laura'];
    const nome = genero === 'masculino' ? nomesMasculinos[Math.floor(Math.random() * nomesMasculinos.length)] : nomesFemininos[Math.floor(Math.random() * nomesFemininos.length)];
    
    // Escolhe uma data de nascimento aleatoriamente
    const ano = Math.floor(Math.random() * (2050 - 2024 + 1)) + 2024;
    const mes = Math.floor(Math.random() * 12) + 1;
    const dia = Math.floor(Math.random() * 31) + 1;
    const dataNascimento = new Date(ano, mes, dia);
    
    // Formata a data de nascimento
    const options = { year: 'numeric', month: 'long', day: 'numeric' };
    const dataNascimentoFormatada = dataNascimento.toLocaleDateString('pt-BR', options);

    const respostafilho = `*üéäParab√©ns, voc√™ √© o(a) mais novo(a) Pai/M√£eüéä* \n\nüöº Voc√™ ter√° um nen√©m do sexo *${genero}* \nü™™ Nome dele(a) ser√° *${nome}!* \n‚è≥ Ele(a) nascer√° em *${dataNascimentoFormatada}.*`;

    
    // Envia a mensagem com as informa√ß√µes do filho
    bot.sendMessage(msg.chat.id, respostafilho, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
  });
  







// lista de URLs de gifs "certo" e "errado"
const gifs = {
  certo: [
    { url: 'https://media1.tenor.com/images/d3773429c196cf5f84431b74355b5225/tenor.gif?itemid=27624796', caption: '*Parab√©ns, voc√™ conseguiu!*' },
  ],
  errado: [
    { url: 'https://media.tenor.com/images/7fe52d2d9bbc27937b30761ff5dd32d0/tenor.gif', caption: '*Ops, voc√™ n√£o conseguiu. Tente novamente!*' },
  ]
};

// comando /sorte
bot.onText(/\/sorte/, (msg) => {
  // gera um n√∫mero aleat√≥rio entre 0 e 1
  const randomNumber = Math.random();

  // define a mensagem de resposta com o gif correspondente
  let response;
  if (randomNumber < 0.01) {
    // 1% de chance de enviar um gif "certo"
    const index = Math.floor(Math.random() * gifs.certo.length);
    response = gifs.certo[index];
  } else {
    // 99% de chance de enviar um gif "errado"
    const index = Math.floor(Math.random() * gifs.errado.length);
    response = gifs.errado[index];
  }

  // envia a mensagem com o gif e o caption
  bot.sendDocument(msg.chat.id, response.url, { caption: response.caption, reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
});








const candidatos = [
  { nome: 'Jair Bolsonaro', partido: 'PL', imagem: 'https://opopularmm.com.br/wp-content/uploads/2018/10/BOLSONARO-750x750.jpg' },
  { nome: 'Lula', partido: 'PT', imagem: 'https://asmetro.org.br/portalsn/wp-content/uploads/2022/12/lula-site.png' },
  { nome: 'Ciro Gomes', partido: 'PDT', imagem: 'https://todospelaeducacao.org.br/wordpress/wp-content/uploads/2018/08/candidato-ciro-gomes.jpg' },
  { nome: 'Jo√£o Doria', partido: 'PSDB', imagem: 'https://pbs.twimg.com/profile_images/1519326494488776705/v_hRn0jz_400x400.jpg' },
  { nome: 'Marina Silva', partido: 'REDE', imagem: 'https://pbs.twimg.com/profile_images/1577255224741400576/_1Vi_i-g_400x400.jpg' },
  { nome: 'S√©rgio Moro', partido: 'UB', imagem: 'https://pbs.twimg.com/profile_images/1559524571174297602/NIso6rDG_400x400.jpg' },
  { nome: 'Eduardo Leite', partido: 'PSDB', imagem: 'https://media.licdn.com/dms/image/C4E03AQEvOFeTZp40ag/profile-displayphoto-shrink_800_800/0/1650287742747?e=2147483647&v=beta&t=G1uUOJEC7t2upBZ0FrBJ5wFxRZZOQZs3iufNzALBnLk' },
  { nome: 'Geraldo Alckmin', partido: 'PSB', imagem: 'https://pbs.twimg.com/profile_images/1587509953425997824/C5aKzsY0_400x400.jpg' },
  { nome: 'Padre Kelmon', partido: 'DEM', imagem: 'https://i.em.com.br/K8JiPm7KaASNcmCOfllkz71RSNM=/820x0/smart/imgsapp.em.com.br/app/noticia_127983242361/2022/09/29/1400246/padre-kelmon-candidato-do-ptb_1_53369.jpg' },
  { nome: 'Cabo Daciolo', partido: 'PATRI', imagem: 'https://pbs.twimg.com/profile_images/1591111452043223048/904rAJQl_400x400.jpg' },
  { nome: 'Guilherme Boulos', partido: 'PSOL', imagem: 'https://conteudo.imguol.com.br/c/parceiros/6a/2020/11/27/guilherme-boulos-foto-guilherme-santos-sul-21-1606514489514_v2_450x450.jpg.webp' },
  { nome: 'Luciano Huck', partido: 'Sem partido', imagem: 'https://pbs.twimg.com/profile_images/1500173998080016387/wuOSWMir_400x400.jpg' },
  { nome: 'Fernando Haddad', partido: 'PT', imagem: 'https://pbs.twimg.com/profile_images/1580018698961690624/BKkWfeFV_400x400.jpg' },
  { nome: '√Ålvaro Dias', partido: 'PODE', imagem: 'https://www.senado.leg.br/senadores/img/fotos-oficiais/senador945.jpg' },
  { nome: 'Manuela D\'√Åvila', partido: 'PCdoB', imagem: 'https://www.diariodocentrodomundo.com.br/wp-content/uploads/2018/07/manuela-1-640x455.jpg' },
];


bot.onText(/^\/presidente/, async (msg, match) => {
  // Sorteia um candidato aleat√≥rio
  const candidatoIndex = Math.floor(Math.random() * candidatos.length);
  const candidato = candidatos[candidatoIndex];
  const chatId = msg.chat.id;

  // Envia a imagem do candidato com a informa√ß√£o do candidato na caption
  await bot.sendPhoto(chatId, candidato.imagem, { 
    caption: `Seu presidente √© *${candidato.nome}* (${candidato.partido})`,
    parse_mode: 'Markdown',
    reply_to_message_id: msg.message_id 
  });
});




const atores = [
  {
    nome: 'Meryl Streep',
    idade: 72,
    filmes: ['O Diabo Veste Prada', 'Kramer vs. Kramer', 'A Dama de Ferro'],
    oscar: true,
    emoji: '‚≠êÔ∏è',
  },
  {
    nome: 'Tom Hanks',
    idade: 65,
    filmes: ['Forrest Gump', 'N√°ufrago', 'O Resgate do Soldado Ryan'],
    oscar: true,
    emoji: '‚≠êÔ∏è',
  },
  {
    nome: 'Leonardo DiCaprio',
    idade: 47,
    filmes: ['O Lobo de Wall Street', 'Titanic', 'O Regresso'],
    oscar: true,
    emoji: '‚≠êÔ∏è',
  },
  {
    nome: 'Emma Stone',
    idade: 33,
    filmes: ['La La Land', 'Birdman', 'As Servi√ßais'],
    oscar: true,
    emoji: '‚≠êÔ∏è',
  },
  {
    nome: 'Denzel Washington',
    idade: 67,
    filmes: ['Dia de Treinamento', 'Malcolm X', 'Um Limite Entre N√≥s'],
    oscar: true,
    emoji: '‚≠êÔ∏è',
  },
  {
    nome: 'Cate Blanchett',
    idade: 52,
    filmes: ['Blue Jasmine', 'O Aviador', 'Elizabeth'],
    oscar: true,
    emoji: '‚≠êÔ∏è',
  },
  {
    nome: 'Robert De Niro',
    idade: 78,
    filmes: ['Taxi Driver', 'O Poderoso Chef√£o Parte II', 'Touro Indom√°vel'],
    oscar: true,
    emoji: '‚≠êÔ∏è',
  },
  {
    nome: 'Joaquin Phoenix',
    idade: 47,
    filmes: ['Coringa', 'Gladiador', 'Ela'],
    oscar: true,
    emoji: '‚≠êÔ∏è',
  },
  {
    nome: 'Anthony Hopkins',
    idade: 84,
    filmes: ['O Sil√™ncio dos Inocentes', 'Hannibal', 'Oito Mulheres e um Segredo'],
    oscar: true,
    emoji: '‚≠êÔ∏è',
  },
  {
    nome: 'Morgan Freeman',
    idade: 84,
    filmes: ['Um Sonho de Liberdade', 'Conduzindo Miss Daisy', 'Truque de Mestre'],
    oscar: true,
    emoji: '‚≠êÔ∏è',
  },
];

bot.onText(/\/ator/, (msg) => {
  const ator = atores[Math.floor(Math.random() * atores.length)];
  const { nome, idade, filmes, oscar, emoji } = ator;

  let mensagem = `*Seu ator/atriz preferido(a) ${emoji}*\n\n*Nome:* ${nome} \n*Idade:* ${idade} anos\n*Filmes:*${filmes.join(', ')}\n`;

  if (oscar) {
    mensagem += `\n*Ganhador(a) do Oscar üèÜ*`;
  } else {
    mensagem += `\n*Indicado(a) ao Oscar üé•*`;
  }

  bot.sendMessage(msg.chat.id, mensagem, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
});


bot.onText(/\/religiao/, (msg) => {
  const religioes = [
    { nome: 'Cristianismo', emoji: '‚úùÔ∏è', descricao: 'Religi√£o que cr√™ em Jesus Cristo como o filho de Deus e salvador da humanidade.', fundador: 'Jesus Cristo' },
    { nome: 'Islamismo', emoji: '‚ò™Ô∏è', descricao: 'Religi√£o que segue os ensinamentos do profeta Maom√© e cr√™ em Al√° como o √∫nico Deus.', fundador: 'Maom√©' },
    { nome: 'Juda√≠smo', emoji: '‚ú°Ô∏è', descricao: 'Religi√£o que se baseia no Antigo Testamento e acredita na vinda do Messias.', fundador: 'Abra√£o' },
    { nome: 'Budismo', emoji: '‚ò∏Ô∏è', descricao: 'Religi√£o que busca a ilumina√ß√£o atrav√©s da medita√ß√£o e do estudo dos ensinamentos de Buda.', fundador: 'Buda' },
    { nome: 'Hindu√≠smo', emoji: 'üïâÔ∏è', descricao: 'Religi√£o que cr√™ na reencarna√ß√£o e no karma, e venera v√°rios deuses e deusas.', fundador: 'N√£o h√° um fundador definido' },
    { nome: 'Siquismo', emoji: '‚ò¨', descricao: 'Religi√£o que segue os ensinamentos do Guru Nanak e prega a igualdade e a fraternidade.', fundador: 'Guru Nanak' },
    { nome: 'Candombl√©', emoji: 'üîÆ', descricao: 'Religi√£o afro-brasileira que cultua os orix√°s e entidades ancestrais africanas.', fundador: 'N√£o h√° um fundador definido' },
    { nome: 'Wicca', emoji: 'üåô', descricao: 'Religi√£o neopag√£ que se baseia na magia e na natureza, e celebra os ciclos da Lua.', fundador: 'Gerald Gardner' },
    { nome: 'Zoroastrismo', emoji: 'üïäÔ∏è', descricao: 'Religi√£o antiga do Ir√£ que acredita em um Deus supremo, Ahura Mazda, e na luta entre o bem e o mal.', fundador: 'Zaratustra' },
    { nome: 'Xinto√≠smo', emoji: 'üéé', descricao: 'Religi√£o japonesa que venera os kami, esp√≠ritos divinos da natureza e dos antepassados.', fundador: 'N√£o h√° um fundador definido' },
    { nome: 'Santo Daime', emoji: 'üçÉ', descricao: 'Religi√£o brasileira que utiliza um ch√° alucin√≥geno, o ayahuasca, em seus rituais.', fundador: 'Raimundo Irineu Serra' },
    { nome: 'Satanismo', emoji: 'üëπ', descricao: 'Movimento que cultua Satan√°s como um s√≠mbolo da liberdade individual e da rebeli√£o contra a moral religiosa.', fundador: 'Anton LaVey' },
    { nome: 'Jainismo', emoji: 'üïâÔ∏è', descricao: 'Religi√£o indiana que prega a n√£o-viol√™ncia, o respeito a todas as formas de vida e a busca pela liberta√ß√£o do ciclo de reencarna√ß√£o.', fundador: 'Mahavira' },
    { nome: 'Taoismo', emoji: '‚òØÔ∏è', descricao: 'Filosofia religiosa chinesa que busca o equil√≠brio entre opostos e a harmonia com a natureza.', fundador: 'Lao Ts√©' },
  ];

  // Escolhe aleatoriamente a religi√£o correspondente
  const religiao = religioes[Math.floor(Math.random() * religioes.length)];
  const respostaReligao = `Sua relig√£o √© *${religiao.nome} ${religiao.emoji}*\n\n*Dados:* ${religiao.descricao}\n\n*Fundador:* ${religiao.fundador}`;


  // Resposta ao usu√°rio
  bot.sendMessage(msg.chat.id, respostaReligao, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
});


bot.onText(/\/altura/, (msg) => {
  const altura = (Math.floor(Math.random() * 81) + 130) / 100; // Altura aleat√≥ria entre 1,30 e 2,10
  const alturaEmojis = ['üë∂', 'üßç', 'üëß', 'üë®', 'üßë', 'üë¥', 'üèãÔ∏è‚Äç‚ôÇÔ∏è', 'üöÄ', 'ü¶ç', 'ü¶í']; // Emojis correspondentes a cada faixa de altura
  let emoji = alturaEmojis[0];
  let frase = 'Altura abaixo da m√©dia'; // Frase correspondente √† faixa de altura

  // Verifica em qual faixa de altura a altura aleat√≥ria se encontra
  if (altura >= 1.31 && altura <= 1.40) {
    emoji = alturaEmojis[1];
    frase = 'Altura de um(a) hobbit';
  } else if (altura >= 1.41 && altura <= 1.50) {
    emoji = alturaEmojis[2];
    frase = 'Altura de uma pessoa baixa';
  } else if (altura >= 1.51 && altura <= 1.60) {
    emoji = alturaEmojis[3];
    frase = 'Altura de uma pessoa m√©dia';
  } else if (altura >= 1.61 && altura <= 1.70) {
    emoji = alturaEmojis[4];
    frase = 'Altura de uma pessoa alta';
  } else if (altura >= 1.71 && altura <= 1.80) {
    emoji = alturaEmojis[5];
    frase = 'Altura de um(a) modelo';
  } else if (altura >= 1.81 && altura <= 1.90) {
    emoji = alturaEmojis[6];
    frase = 'Altura de um(a) jogador(a) de basquete';
  } else if (altura >= 1.91 && altura <= 2.00) {
    emoji = alturaEmojis[7];
    frase = 'Altura de um(a) gigante';
  } else if (altura >= 2.01 && altura <= 2.10) {
    emoji = alturaEmojis[8];
    frase = 'Altura de um(a) tit√£';
  }

  const resposta = `*Sua altura ${emoji}* \n\nVoc√™ mede √© *${altura.toFixed(2)} m.* \n\n${frase}!`;

  bot.sendMessage(msg.chat.id, resposta, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
});



bot.onText(/\/idade/, (msg) => {
  // Escolhe uma idade aleat√≥ria entre 16 e 59
  const idade = Math.floor(Math.random() * 44) + 16;

  // Monta a mensagem de resposta com a idade escolhida
  const resposta = `Voc√™ tem a idade de ${idade} anos.`;

  // Envia a mensagem de resposta
  bot.sendMessage(msg.chat.id, resposta, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
});




const sistemas = [
  {
    nome: 'Capitalismo',
    codenome: 'Capitalista',
    descricao: 'Sistema econ√¥mico em que os meios de produ√ß√£o s√£o de propriedade privada e as atividades econ√¥micas s√£o guiadas pelo mercado.',
    emoji: 'üí∞'
  },
  {
    nome: 'Socialismo',
    codenome: 'Socialista',
    descricao: 'Sistema econ√¥mico em que os meios de produ√ß√£o s√£o de propriedade coletiva e as atividades econ√¥micas s√£o planejadas e controladas pelo Estado.',
    emoji: 'üë•'
  },
  {
    nome: 'Comunismo',
    codenome: 'Comunista',
    descricao: 'Sistema pol√≠tico e econ√¥mico que busca a elimina√ß√£o das classes sociais e a propriedade coletiva dos meios de produ√ß√£o.',
    emoji: 'üö©'
  },
  {
    nome: 'Anarquismo',
    codenome: 'Anarquista',
    descricao: 'Filosofia pol√≠tica que defende a elimina√ß√£o do Estado e a organiza√ß√£o da sociedade em comunidades aut√¥nomas e auto-geridas.',
    emoji: '‚í∂'
  },
  {
    nome: 'Fascismo',
    codenome: 'Facista',
    descricao: 'Ideologia pol√≠tica autorit√°ria que enfatiza o nacionalismo, o militarismo e o totalitarismo.',
    emoji: 'üïäÔ∏è'
  },
  {
    nome: 'Monarquia',
    codenome: 'Monarquista',
    descricao: 'Sistema pol√≠tico em que o poder √© exercido por um monarca, geralmente de forma heredit√°ria.',
    emoji: 'üëë'
  },
  {
    nome: 'Rep√∫blica',
    codenome: 'Republicano',
    descricao: 'Sistema pol√≠tico em que o poder √© exercido pelo povo ou seus representantes eleitos.',
    emoji: 'üó≥Ô∏è'
  },
  {
    nome: 'Democracia',
    codenome: 'Democrata',
    descricao: 'Sistema pol√≠tico em que o poder √© exercido pelo povo ou seus representantes eleitos, atrav√©s de processos democr√°ticos.',
    emoji: 'üó≥Ô∏è'
  },
  {
    nome: 'Teocracia',
    codenome: 'Teocrata',
    descricao: 'Sistema pol√≠tico em que o poder √© exercido por l√≠deres religiosos ou por uma religi√£o oficial.',
    emoji: 'üïç'
  },
  {
    nome: 'Meritocracia',
    codenome: 'Meritocrata',
    descricao: 'Sistema pol√≠tico em que o poder √© exercido por indiv√≠duos com base em seus m√©ritos e habilidades.',
    emoji: 'üéì'
  },
  {
    nome: 'Plutocracia',
    codenome: 'Plutocrata',
    descricao: 'Sistema pol√≠tico em que o poder √© exercido pelos mais ricos ou pelos propriet√°rios de grandes empresas.',
    emoji: 'üí∞'
  },
  {
    nome: 'Oligarquia',
    codenome: 'Olig√°rquico',
    descricao: 'Sistema pol√≠tico em que o poder √© exercido por um pequeno grupo de pessoas.',
    emoji: 'üë•'
  },
  {
    nome: 'Totalitarismo',
    codenome: 'Totalit√°rio',
    descricao: 'Sistema pol√≠tico em que o Estado tem controle total sobre a sociedade e a economia.',
    emoji: 'üõ°Ô∏è'
  },
  {
    nome: 'Autocracia',
    codenome: 'Autocrata',
    descricao: 'Sistema pol√≠tico em que o poder √© exercido por uma pessoa ou por um pequeno grupo de pessoas, sem qualquer participa√ß√£o popular ou limita√ß√µes constitucionais.',
    emoji: 'üë§'
    }
    ];



bot.onText(/\/sistema/, (msg) => {
  const sistemaIndex = Math.floor(Math.random() * sistemas.length);
  const sistema = sistemas[sistemaIndex];

  
  bot.sendMessage(msg.chat.id, `Voc√™ √© um *${sistema.codenome} ${sistema.emoji}* \n\n*Sistema:* ${sistema.nome}\n\n*Descri√ß√£o:* ${sistema.descricao}`, {
    parse_mode: 'Markdown',
    reply_to_message_id: msg.message_id
  });
});



const profissoes = [
  {
    nome: 'M√©dico(a)',
    funcao: 'Cuida da sa√∫de das pessoas e prescreve tratamentos m√©dicos.',
    emoji: 'ü©∫'
  },
  {
    nome: 'Psic√≥logo(a)',
    funcao: 'Trata de quest√µes emocionais, mentais e comportamentais dos pacientes.',
    emoji: 'üß†'
  },
  {
    nome: 'Bombeiro(a)',
    funcao: 'Combate inc√™ndios, realiza salvamentos e presta primeiros socorros.',
    emoji: 'üöí'
  },
  {
    nome: 'Policial',
    funcao: 'Mant√©m a seguran√ßa e a ordem p√∫blica e investiga crimes.',
    emoji: 'üëÆ‚Äç‚ôÇÔ∏è'
  },
  {
    nome: 'Contador(a)',
    funcao: 'Registra e analisa informa√ß√µes financeiras das empresas.',
    emoji: 'üßÆ'
  },
  {
    nome: 'Piloto(a)',
    funcao: 'Controla a navega√ß√£o de aeronaves e garante a seguran√ßa dos passageiros.',
    emoji: '‚úàÔ∏è'
  },
  {
    nome: 'Veterin√°rio(a)',
    funcao: 'Cuida da sa√∫de e bem-estar dos animais.',
    emoji: 'üêæ'
  },
  {
    nome: 'Nutricionista',
    funcao: 'Orienta as pessoas sobre h√°bitos alimentares saud√°veis e balanceados.',
    emoji: 'ü•ó'
  },
  {
    nome: 'Fisioterapeuta',
    funcao: 'Trata de les√µes, doen√ßas e disfun√ß√µes f√≠sicas dos pacientes.',
    emoji: 'ü¶µ'
  },
  {
    nome: 'Cientista',
    funcao: 'Realiza pesquisas e estudos em diversas √°reas da ci√™ncia.',
    emoji: 'üî¨'
  },
  {
    nome: 'Escritor(a)',
    funcao: 'Cria e desenvolve obras liter√°rias, como livros e roteiros.',
    emoji: 'üìù'
  },
  {
    nome: 'Cineasta',
    funcao: 'Dirige e produz filmes e outras produ√ß√µes audiovisuais.',
    emoji: 'üé¨'
  },
  {
    nome: 'Empres√°rio(a)',
    funcao: 'Gerencia e administra empresas e neg√≥cios.',
    emoji: 'üíº'
  },
  {
    nome: 'Atleta',
    funcao: 'Pratica e compete em esportes profissionalmente.',
    emoji: 'üèÖ'
  },
  {
    nome: 'Chef de Cozinha',
    funcao: 'Cria e desenvolve receitas e pratos culin√°rios.',
    emoji: 'üë®‚Äçüç≥'
  },
  {
    nome: 'Produtor(a) Musical',
    funcao: 'Produz e grava m√∫sicas e √°lbuns para artistas.',
    emoji: 'üéß'
  },
  {
    nome: 'Cirurgi√£o(√£)',
    funcao: 'Realiza cirurgias e procedimentos m√©dicos em pacientes.',
    emoji: 'üî™'
  },
  {
    nome: 'Construtor(a)',
    funcao: 'Constr√≥i edif√≠cios, estruturas e obras de engenharia civil.',
    emoji: 'üèóÔ∏è'
  },
  {
    nome: 'Psiquiatra',
    funcao: '√â respons√°vel por diagnosticar e tratar todas as quest√µes de ordem mental, como depend√™ncia qu√≠mica, depress√£o e ansiedade, por exemplo.',
    emoji: 'ü©∫'
  },
  {
    nome: 'Arquiteto(a)',
    funcao: 'Desenvolve projetos e planos para constru√ß√µes e edif√≠cios.',
    emoji: 'üèõÔ∏è'
  },
  {
    nome: 'Advogado(a)',
    funcao: 'Representa e defende os interesses legais de seus clientes.',
    emoji: 'üë®‚Äçüíº'
  },
  {
    nome: 'Jornalista',
    funcao: 'Pesquisa, escreve e reporta not√≠cias e informa√ß√µes ao p√∫blico.',
    emoji: 'üì∞'
  },
  {
    nome: 'Enfermeiro(a)',
    funcao: 'Cuida e trata de pacientes em hospitais e cl√≠nicas.',
    emoji: 'üë®‚Äç‚öïÔ∏è'
  },
  {
    nome: 'Professor(a)',
    funcao: 'Ensina e educa alunos em institui√ß√µes de ensino.',
    emoji: 'üë®‚Äçüè´'
  },
  {
    nome: 'Tradutor(a)',
    funcao: 'Traduz textos e documentos de um idioma para outro.',
    emoji: 'üåé'
  },
  {
    nome: 'Designer Gr√°fico',
    funcao: 'Cria e desenvolve projetos visuais e gr√°ficos para empresas e marcas.',
    emoji: 'üé®'
  },
  {
    nome: 'M√©dico(a)',
    funcao: 'Diagnostica, trata e previne doen√ßas e condi√ß√µes m√©dicas em pacientes.',
    emoji: 'üë®‚Äç‚öïÔ∏è'
  },
  {
    nome: 'Programador(a)',
    funcao: 'Desenvolve e escreve c√≥digos para sistemas e aplicativos de software.',
    emoji: 'üíª'
  },
  {
    nome: 'M√∫sico',
    funcao: 'Cria e toca m√∫sicas e instrumentos musicais.',
    emoji: 'üéµ'
  },
  {
    nome: 'Psicanalista',
    funcao: 'Trata de quest√µes emocionais e psicol√≥gicas dos pacientes.',
    emoji: 'üë•'
  },
  {
    nome: 'Engenheiro(a) Civil',
    funcao: 'Projeta e constr√≥i estruturas e obras de engenharia civil.',
    emoji: 'üèóÔ∏è'
  },
  {
    nome: 'Artista Pl√°stico',
    funcao: 'Cria e desenvolve obras de arte visuais e tridimensionais.',
    emoji: 'üé®'
  },
  {
    nome: 'Escultor(a)',
    funcao: 'Cria e desenvolve esculturas e obras de arte tridimensionais.',
    emoji: 'üóø'
  },
  {
    nome: 'Cantor(a)',
    funcao: 'Canta e apresenta m√∫sicas em p√∫blico.',
    emoji: 'üé§'
  },
  {
    nome: 'T√©cnico(a) de Inform√°tica',
    funcao: 'Instala, configura e mant√©m computadores e sistemas de informa√ß√£o.',
    emoji: 'üíª'
  },
  {
    nome: 'Fot√≥grafo(a)',
    funcao: 'Captura e produz fotografias e imagens para diversas finalidades.',
    emoji: 'üì∑'
  },
  {
    nome: 'Bi√≥logo(a)',
    funcao: 'Estuda e pesquisa a vida e os organismos vivos.',
    emoji: 'üå±'
  },
];





bot.onText(/\/profissao/, (msg) => {
  const profissaoIndex  = Math.floor(Math.random() * profissoes.length);
  const profissao  = profissoes[profissaoIndex];

  
  bot.sendMessage(msg.chat.id, `*Sua profiss√£o üíº* \n\n*Nome:* ${profissao.nome} ${profissao.emoji} \n*Fun√ß√£o:* ${profissao.funcao}`, {
    parse_mode: 'Markdown',
    reply_to_message_id: msg.message_id
  });
});





bot.onText(/\/saudades/, (msg) => {
  // Gera aleatoriamente o n√≠vel de chatice entre 0 e 100
  const nivelSaudades = Math.floor(Math.random() * 101);

  // Define a frase de acordo com o n√≠vel de chatice
  let fraseSaudades;
  if (nivelSaudades <= 10) {
    fraseSaudades = "N√£o estou sentindo saudades.";
  } else if (nivelSaudades <= 20) {
    fraseSaudades = "Saudades? O que √© isso?";
  } else if (nivelSaudades <= 40) {
    fraseSaudades = "KKKKKK nem quero saber o que isso de saudades...";
  } else if (nivelSaudades <= 50) {
    fraseSaudades = "Estou neutro, quase frio...";
  } else if (nivelSaudades <= 70) {
    fraseSaudades = "Saudades de voc√™!";
  } else if (nivelSaudades <= 80) {
    fraseSaudades = "Estou morrendo de saudades!";
  } else if (nivelSaudades <= 90) {
    fraseSaudades = "Se eu pudesse, matava a saudade agora!";
  } else {
    fraseSaudades = "Se eu pudesse, te abra√ßava agora!";
  }

  // Define o emoji de acordo com o n√≠vel de chatice
  let emojiSaudades;
  if (nivelSaudades <= 20) {
    emojiSaudades = "üòê";
  } else if (nivelSaudades <= 40) {
    emojiSaudades = "üòï";
  } else if (nivelSaudades <= 60) {
    emojiSaudades = "ü•∫";
  } else if (nivelSaudades <= 80) {
    emojiSaudades = "üòî";
  } else if (nivelSaudades <= 95) {
    emojiSaudades = "üò¢";
  } else {
    emojiSaudades = "üò≠";
  }

  // Cria um gr√°fico vertical com a porcentagem de chatice
  let graficoSaudades = '';
  for (let i = 10; i <= 100; i += 10) {
    if (nivelSaudades >= i) {
      graficoSaudades += 'üü®';
    } else {
      graficoSaudades += '‚¨úÔ∏è';
    }
  } 

  // Cria a mensagem de resposta com a frase, o emoji e o gr√°fico vertical
  const respostaSaudades = `*N√≠vel de saudades*\n\nA sua saudades est√° em ${nivelSaudades}%\n\n${fraseSaudades}${emojiSaudades}\n${graficoSaudades} *${nivelSaudades}%*`;

  // Envia a mensagem de resposta para o usu√°rio que enviou o comando /chato
  bot.sendMessage(msg.chat.id, respostaSaudades, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
})








bot.onText(/\/ciumes/, (msg) => {
  // Gera aleatoriamente o n√≠vel de ci√∫mes entre 0 e 100
  const nivelCiumes = Math.floor(Math.random() * 101);

  // Define a frase de acordo com o n√≠vel de ci√∫mes
  let fraseCiumes;
  if (nivelCiumes <= 10) {
    fraseCiumes = "N√£o estou sentindo ci√∫mes.";
  } else if (nivelCiumes <= 20) {
    fraseCiumes = "Ci√∫mes? Eu? Claro que n√£o!";
  } else if (nivelCiumes <= 40) {
    fraseCiumes = "N√£o √© ci√∫mes, √© preocupa√ß√£o.";
  } else if (nivelCiumes <= 50) {
    fraseCiumes = "N√£o estou com ci√∫mes, s√≥ achei estranho...";
  } else if (nivelCiumes <= 70) {
    fraseCiumes = "Estou com ci√∫mes, mas n√£o vou admitir.";
  } else if (nivelCiumes <= 80) {
    fraseCiumes = "Estou com ci√∫mes, mas n√£o quero te sufocar.";
  } else if (nivelCiumes <= 90) {
    fraseCiumes = "Estou morrendo de ci√∫mes!";
  } else {
    fraseCiumes = "Se eu pudesse, te trancava em casa!";
  }

  // Define o emoji de acordo com o n√≠vel de ci√∫mes
  let emojiCiumes;
  if (nivelCiumes <= 20) {
    emojiCiumes = "üòê";
  } else if (nivelCiumes <= 40) {
    emojiCiumes = "üòï";
  } else if (nivelCiumes <= 60) {
    emojiCiumes = "üò†";
  } else if (nivelCiumes <= 80) {
    emojiCiumes = "ü§¨";
  } else if (nivelCiumes <= 95) {
    emojiCiumes = "üò°";
  } else {
    emojiCiumes = "üí¢";
  }

  // Cria um gr√°fico vertical com a porcentagem de ci√∫mes
  let graficoCiumes = '';
  for (let i = 10; i <= 100; i += 10) {
    if (nivelCiumes >= i) {
      graficoCiumes += 'üî¥';
    } else {
      graficoCiumes += '‚ö™';
    }
  } 

  // Cria a mensagem de resposta com a frase, o emoji e o gr√°fico vertical
  const respostaCiumes = `*N√≠vel de ci√∫mes*\n\nO seu ci√∫me est√° em ${nivelCiumes}%\n\n${fraseCiumes}${emojiCiumes}\n${graficoCiumes} *${nivelCiumes}%*`;

  // Envia a mensagem de resposta para o usu√°rio que enviou o comando /ciumes
  bot.sendMessage(msg.chat.id, respostaCiumes, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
});





const stickers = [
  'CAACAgEAAxkBAAI372P9EexHmVfMTcT_MCJ5t926Q9yqAAIDAgACNWo5RyQSIVGbaQABni4E',
  'CAACAgEAAxkBAAI382P9EiC0kLNfI_Hm9fa7hzQluXEyAAKoAANRd4FGRA1UrSGDIhMuBA',
  'CAACAgEAAxkBAAI39WP9EjBMkIh_hoJnSlgU0vUeR4FHAALiAgACv61ZRwnoA02nk7m4LgQ',
  'CAACAgEAAxkBAAI392P9Ej6BSN0JnZuuv1qcP3dRbevAAALNAgACdUPARt-YJYI7KAwMLgQ',
  'CAACAgEAAxkBAAI3-WP9EpY9GxILI1Ag-cGCdufvLnfUAAKoAwAC43YpR2Ez7kkNmVDdLgQ',
  'CAACAgEAAxkBAAI3-2P9Eqwpz8JdcsX3QHyHCtxmBFeUAAKEAgAC5rPYRN9l-ILQZmgILgQ',
  'CAACAgEAAxkBAAI3_2P9EwagjWrmZXa0aqbbCDXZBNVqAAKmAgACJWFIRahFRq1swkXvLgQ',
  'CAACAgEAAxkBAAI4AWP9ExwP6ufGkvflfpZe5mQtruyVAAIJBQACgg-YRW7u-iSKZ0nwLgQ',
  'CAACAgEAAxkBAAI4A2P9EymeK0iNi5A6Vs3RTefltDR5AAKaAgACxuxYRogsOeOjfwABHC4E',
  'CAACAgEAAxkBAAI4BWP9Ezl6mQP7ePOkr-RZepNTm21DAAJ5AgACIe2IRCTcfyltcgHnLgQ',
  'CAACAgEAAxkBAAI4B2P9E0cdVWMHm3gTX9lmwg8E1eW_AAKsAgACkpYJRvriPDMz9Io9LgQ',
  'CAACAgEAAxkBAAI4CWP9E1QYNLMECpfHz0Naa8a1EsYmAALBBAACou6gRZrADhBMgKymLgQ',
  'CAACAgEAAxkBAAI4C2P9E2nT5TDh33wCgU-SwC5OJzy-AALGAgACPxlJRevtrl4R9gexLgQ',
  'CAACAgEAAxkBAAI4DWP9E4tSOG82QGLnn2QKpRmIJPDnAAKEAgACNQRhRm-d4gpAX_0YLgQ',
  'CAACAgEAAxkBAAI4D2P9E6vwif-4ZyXZR1H2RaqOQTVMAAL8AQAC86JgRjmei8lYtEVXLgQ',
  'CAACAgEAAxkBAAI4EWP9E73Ec5RMziA7Yn52z2yuKsuUAAIOAgACAXRgRkm3He87ZfamLgQ',
  'CAACAgEAAxkBAAI4E2P9E-Jd1gic6ILIh_Qv4nrGnEBcAAIHAgACPF94RideIGdEdIwLLgQ',
  'CAACAgEAAxkBAAI4FWP9E_13ZWcSmzEF6fXYfVueSzI1AAIcBAACHep5RRlG1_uiTiP-LgQ',
];



bot.onText(/\/stickers/, (msg) => {
  const chatId = msg.chat.id;
  const randomSticker = stickers[Math.floor(Math.random() * stickers.length)];
  bot.sendSticker(chatId, randomSticker, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
});







bot.onText(/\/tpm/, (msg) => {
  // Gera aleatoriamente o n√≠vel de irrita√ß√£o entre 0 e 100
  const nivelIrritacao = Math.floor(Math.random() * 101);

  // Define a frase de acordo com o n√≠vel de irrita√ß√£o
  let fraseIrritacao;
  if (nivelIrritacao <= 10) {
    fraseIrritacao = "N√£o estou irritada.";
  } else if (nivelIrritacao <= 20) {
    fraseIrritacao = "N√£o fale comigo.";
  } else if (nivelIrritacao <= 40) {
    fraseIrritacao = "Estou sens√≠vel.";
  } else if (nivelIrritacao <= 50) {
    fraseIrritacao = "N√£o me encha!";
  } else if (nivelIrritacao <= 70) {
    fraseIrritacao = "Estou chateada.";
  } else if (nivelIrritacao <= 80) {
    fraseIrritacao = "Estou com muita tpm!";
  } else if (nivelIrritacao <= 90) {
    fraseIrritacao = "Se eu pudesse, matava todo mundo agora!";
  } else {
    fraseIrritacao = "Se eu pudesse, explodia agora!";
  }

  // Define o emoji de acordo com o n√≠vel de irrita√ß√£o
  let emojiIrritacao;
  if (nivelIrritacao <= 20) {
    emojiIrritacao = "üôÖ";
  } else if (nivelIrritacao <= 40) {
    emojiIrritacao = "üôé‚Äç‚ôÄÔ∏è";
  } else if (nivelIrritacao <= 60) {
    emojiIrritacao = "üò§";
  } else if (nivelIrritacao <= 80) {
    emojiIrritacao = "ü§¨";
  } else if (nivelIrritacao <= 95) {
    emojiIrritacao = "üëø";
  } else {
    emojiIrritacao = "üí£";
  }

  // Cria um gr√°fico vertical com a porcentagem de irrita√ß√£o
  let graficoIrritacao = '';
  for (let i = 10; i <= 100; i += 10) {
    if (nivelIrritacao >= i) {
      graficoIrritacao += '‚¨õ';
    } else {
      graficoIrritacao += '‚¨ú';
    }
  } 

  // Cria a mensagem de resposta com a frase, o emoji e o gr√°fico vertical
  const respostaIrritacao = `*N√≠vel de TPM*\n\nO seu n√≠vel de TPM est√° em ${nivelIrritacao}%\n\n${fraseIrritacao}${emojiIrritacao}\n${graficoIrritacao} *${nivelIrritacao}%*`;

  // Envia a mensagem de resposta para o usu√°rio que enviou o comando /tpm
  bot.sendMessage(msg.chat.id, respostaIrritacao, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
})



bot.onText(/\/gostosura/, (msg) => {
  // Gera aleatoriamente o n√≠vel de gostosura entre 0 e 100
  const nivelGostosura = Math.floor(Math.random() * 101);

  // Define a mensagem de acordo com o n√≠vel de gostosura
  let mensagemGostosura;
  if (nivelGostosura <= 20) {
    mensagemGostosura = "Nada demais...";
  } else if (nivelGostosura <= 40) {
    mensagemGostosura = "Voc√™ √© bonitinha(o)";
  } else if (nivelGostosura <= 60) {
    mensagemGostosura = "Voc√™ √© atraente";
  } else if (nivelGostosura <= 80) {
    mensagemGostosura = "Voc√™ √© muito gostosa(o)";
  } else {
    mensagemGostosura = "Voc√™ √© uma deusa(dos)";
  }

  // Define o emoji de acordo com o n√≠vel de gostosura
  let emojiGostosura;
  if (nivelGostosura <= 20) {
    emojiGostosura = "üôÑ";
  } else if (nivelGostosura <= 40) {
    emojiGostosura = "üòä";
  } else if (nivelGostosura <= 60) {
    emojiGostosura = "üòç";
  } else if (nivelGostosura <= 80) {
    emojiGostosura = "üòò";
  } else {
    emojiGostosura = "üî•";
  }

  // Cria um gr√°fico vertical com a porcentagem de gostosura
  let graficoGostosura = '';
  for (let i = 10; i <= 100; i += 10) {
    if (nivelGostosura >= i) {
      graficoGostosura += 'üü™';
    } else {
      graficoGostosura += '‚¨ú';
    }
  } 

  // Cria a mensagem de resposta com a mensagem, o emoji e o gr√°fico vertical
  const respostaGostosura = `*N√≠vel de gostosura*\n\nVoc√™ √© ${mensagemGostosura}${emojiGostosura}\n${graficoGostosura} *${nivelGostosura}%*`;

  // Envia a mensagem de resposta para o usu√°rio que enviou o comando /gostosura
  bot.sendMessage(msg.chat.id, respostaGostosura, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
})




bot.onText(/\/burro/, (msg) => {
  // Gera aleatoriamente o n√≠vel de burrice entre 0 e 100
  const nivelBurro = Math.floor(Math.random() * 101);

  // Define a frase de acordo com o n√≠vel de burrice
  let fraseBurro;
  if (nivelBurro <= 10) {
    fraseBurro = "Eu sou o Einstein perto de voc√™.";
  } else if (nivelBurro <= 20) {
    fraseBurro = "Acho que voc√™ deveria estudar um pouco mais.";
  } else if (nivelBurro <= 40) {
    fraseBurro = "N√£o √© o seu dia hoje, n√©?";
  } else if (nivelBurro <= 50) {
    fraseBurro = "T√° dif√≠cil pra voc√™, hein?";
  } else if (nivelBurro <= 70) {
    fraseBurro = "Voc√™ √© burro, mas tem outras qualidades.";
  } else if (nivelBurro <= 80) {
    fraseBurro = "Vamos trabalhar juntos para melhorar o seu desempenho.";
  } else if (nivelBurro <= 90) {
    fraseBurro = "Voc√™ precisa estudar mais e se esfor√ßar mais.";
  } else {
    fraseBurro = "Voc√™ √© t√£o burro que nem percebe que √© burro.";
  }

  // Define o emoji de acordo com o n√≠vel de burrice
  let emojiBurro;
  if (nivelBurro <= 20) {
    emojiBurro = "üôÑ";
  } else if (nivelBurro <= 40) {
    emojiBurro = "üòï";
  } else if (nivelBurro <= 60) {
    emojiBurro = "ü§î";
  } else if (nivelBurro <= 80) {
    emojiBurro = "ü§¶‚Äç‚ôÇÔ∏è";
  } else {
    emojiBurro = "ü§Ø";
  }

  // Cria um gr√°fico vertical com a porcentagem de burrice
  let graficoBurro = '';
  for (let i = 10; i <= 100; i += 10) {
    if (nivelBurro >= i) {
      graficoBurro += 'üü´';
    } else {
      graficoBurro += '‚¨úÔ∏è';
    }
  } 

  // Cria a mensagem de resposta com a frase, o emoji e o gr√°fico vertical
  const respostaBurro = `*N√≠vel de burrice*\n\nO seu n√≠vel de burrice √© ${nivelBurro}%\n\n${fraseBurro}${emojiBurro}\n${graficoBurro} *${nivelBurro}%*`;

  // Envia a mensagem de resposta para o usu√°rio que enviou o comando /burro
  bot.sendMessage(msg.chat.id, respostaBurro, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
})


bot.onText(/\/treteiro/, (msg) => {
  // Gera aleatoriamente o n√≠vel de treteirice entre 0 e 100
  const nivelTreteiro = Math.floor(Math.random() * 101);

  // Define a frase de acordo com o n√≠vel de treteirice
  let fraseTreteiro;
  if (nivelTreteiro <= 10) {
    fraseTreteiro = "Nada de treta hoje, estou tranquilo.";
  } else if (nivelTreteiro <= 30) {
    fraseTreteiro = "Hoje n√£o estou muito a fim de treta.";
  } else if (nivelTreteiro <= 50) {
    fraseTreteiro = "Eu at√© poderia arranjar uma treta, mas t√¥ com pregui√ßa.";
  } else if (nivelTreteiro <= 70) {
    fraseTreteiro = "Estou um pouco treteiro hoje.";
  } else if (nivelTreteiro <= 90) {
    fraseTreteiro = "Hoje √© dia de treta!";
  } else {
    fraseTreteiro = "Estou pronto para a guerra das tretas!";
  }

  // Define o emoji de acordo com o n√≠vel de treteirice
  let emojiTreteiro;
  if (nivelTreteiro <= 20) {
    emojiTreteiro = "üòê";
  } else if (nivelTreteiro <= 40) {
    emojiTreteiro = "üòè";
  } else if (nivelTreteiro <= 60) {
    emojiTreteiro = "üòà";
  } else if (nivelTreteiro <= 80) {
    emojiTreteiro = "üëπ";
  } else {
    emojiTreteiro = "üí£";
  }

  // Cria um gr√°fico vertical com a porcentagem de treteirice
  let graficoTreteiro = '';
  for (let i = 10; i <= 100; i += 10) {
    if (nivelTreteiro >= i) {
      graficoTreteiro += '‚ö´';
    } else {
      graficoTreteiro += '‚ö™';
    }
  } 

  // Cria a mensagem de resposta com a frase, o emoji e o gr√°fico vertical
  const respostaTreteiro = `*N√≠vel de treteiro(a)*\n\nO seu n√≠vel de treteiro(a) est√° em ${nivelTreteiro}%\n\n${fraseTreteiro}${emojiTreteiro}\n${graficoTreteiro} *${nivelTreteiro}%*`;

  // Envia a mensagem de resposta para o usu√°rio que enviou o comando /treteiro
  bot.sendMessage(msg.chat.id, respostaTreteiro, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
})




bot.onText(/\/sexo/, (msg) => {
  // Gera aleatoriamente o n√≠vel de potencial na cama entre 0 e 100
  const nivelPotencial = Math.floor(Math.random() * 101);

  // Define a frase de acordo com o n√≠vel de potencial na cama
  let frasePotencial;
  if (nivelPotencial <= 10) {
    frasePotencial = "Hoje eu t√¥ cansado, acho que n√£o rola.";
  } else if (nivelPotencial <= 30) {
    frasePotencial = "Talvez eu esteja um pouco enferrujado.";
  } else if (nivelPotencial <= 50) {
    frasePotencial = "Eu t√¥ mais ou menos, pode ser que role.";
  } else if (nivelPotencial <= 70) {
    frasePotencial = "Hoje eu t√¥ bem, acho que pode ser bom.";
  } else if (nivelPotencial <= 90) {
    frasePotencial = "Eu t√¥ muito animado, vai ser √≥timo!";
  } else {
    frasePotencial = "Eu t√¥ pronto para arrasar na cama!";
  }

  // Define o emoji de acordo com o n√≠vel de potencial na cama
  let emojiPotencial;
  if (nivelPotencial <= 20) {
    emojiPotencial = "üòï";
  } else if (nivelPotencial <= 40) {
    emojiPotencial = "üòè";
  } else if (nivelPotencial <= 60) {
    emojiPotencial = "üòç";
  } else if (nivelPotencial <= 80) {
    emojiPotencial = "üòà";
  } else {
    emojiPotencial = "üî•";
  }

  // Cria um gr√°fico vertical com a porcentagem de potencial na cama
  let graficoPotencial = '';
  for (let i = 10; i <= 100; i += 10) {
    if (nivelPotencial >= i) {
      graficoPotencial += 'üü•';
    } else {
      graficoPotencial += '‚¨úÔ∏è';
    }
  } 

  // Cria a mensagem de resposta com a frase, o emoji e o gr√°fico vertical
  const respostaPotencial = `*Potencial na cama*\n\nO seu potencial na cama est√° em ${nivelPotencial}%\n\n${frasePotencial}${emojiPotencial}\n${graficoPotencial} *${nivelPotencial}%*`;

  // Envia a mensagem de resposta para o usu√°rio que enviou o comando /sexo
  bot.sendMessage(msg.chat.id, respostaPotencial, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
})




bot.onText(/\/fake/, (msg) => {
  const chatId = msg.chat.id;

  // Gerar resposta verdadeira ou falsa aleat√≥ria para cada categoria
  const isNameFake = Math.random() < 0.5;
  const isPhotoFake = Math.random() < 0.5;
  const isUsernameFake = Math.random() < 0.5;
  const isTypingStyleFake = Math.random() < 0.5;

  // Calcular a porcentagem de probabilidade de ser falso com base na quantidade de categorias falsas detectadas
  const numCategories = 4;
  const numFakeCategories = (isNameFake ? 1 : 0) + (isPhotoFake ? 1 : 0) + (isUsernameFake ? 1 : 0) + (isTypingStyleFake ? 1 : 0);
  const probability = Math.round((numFakeCategories / numCategories) * 100);

  // Gerar resposta com base nas respostas verdadeiras ou falsas aleat√≥rias e na porcentagem de probabilidade
  let response = '*‚ö†Ô∏è Verificador de fake ‚ö†Ô∏è*\n\nüëÆ‚Äç‚ôÇÔ∏è Iniciando an√°lise üëÆ‚Äç‚ôÇÔ∏è\n\n';

  response += `*Nome:* ${isNameFake ? '‚ùå falso' : '‚úÖ verdadeiro'}\n`;
  response += `*Foto:* ${isPhotoFake ? '‚ùå falsa' : '‚úÖ verdadeira'}\n`;
  response += `*Username:* ${isUsernameFake ? '‚ùå falso' : '‚úÖ verdadeiro'}\n`;
  response += `*Forma de escrever:* ${isTypingStyleFake ? '‚ùå falsa' : '‚úÖ verdadeira'}\n\n`;

  response += `Resultado: Existe a probabilidade de *${probability}% de voc√™ ser fake.üëÄ*`;

  bot.sendMessage(chatId, response, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
});







bot.onText(/\/serbanido/, (msg) => {
  const chatId = msg.chat.id;

  // Gerar resposta verdadeira ou falsa aleat√≥ria para cada categoria
  const isNameBan = Math.random() < 0.5;
  const isPhotoBan = Math.random() < 0.5;
  const isUsernameBan = Math.random() < 0.5;
  const isTypingStyleBan = Math.random() < 0.5;

  // Calcular a porcentagem de probabilidade de ser falso com base na quantidade de categorias falsas detectadas
  const numCategories = 4;
  const numBanCategories = (isNameBan ? 1 : 0) + (isPhotoBan ? 1 : 0) + (isUsernameBan ? 1 : 0) + (isTypingStyleBan ? 1 : 0);
  const probability = Math.round((numBanCategories / numCategories) * 100);

  // Gerar resposta com base nas respostas verdadeiras ou falsas aleat√≥rias e na porcentagem de probabilidade
  let response1 = '*‚ö†Ô∏è Verificador de Banimento ‚ö†Ô∏è*\n\nüëÆ‚Äç‚ôÇÔ∏è Iniciando an√°lise üëÆ‚Äç‚ôÇÔ∏è\n\n';

  response1 += `*Advert√™ncia:* ${isNameBan ? '‚ùå falso' : '‚úÖ verdadeiro'}\n`;
  response1 += `*Mute:* ${isPhotoBan ? '‚ùå falsa' : '‚úÖ verdadeira'}\n`;
  response1 += `*Kick:* ${isUsernameBan ? '‚ùå falso' : '‚úÖ verdadeiro'}\n`;
  response1 += `*Forma de escrever:* ${isTypingStyleBan ? '‚ùå falsa' : '‚úÖ verdadeira'}\n\n`;

  response1 += `üîÑCarregando informa√ß√µes...üîÑ \n\nResultado: Existe a probabilidade de *${probability}% de voc√™ ser Banida.üëÄ*`;

  bot.sendMessage(chatId, response1, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
});






bot.onText(/\/seradm/, (msg) => {
  const chatId = msg.chat.id;

  // Gerar resposta verdadeira ou falsa aleat√≥ria para cada categoria
  const isNameAdm = Math.random() < 0.5;
  const isPhotoAdm = Math.random() < 0.5;
  const isUsernameAdm = Math.random() < 0.5;
  const isTypingStyleAdm = Math.random() < 0.5;

  // Calcular a porcentagem de probabilidade de ser falso com base na quantidade de categorias falsas detectadas
  const numCategories = 4;
  const numAdmCategories = (isNameAdm ? 1 : 0) + (isPhotoAdm ? 1 : 0) + (isUsernameAdm ? 1 : 0) + (isTypingStyleAdm ? 1 : 0);
  const probability = Math.round((numAdmCategories / numCategories) * 100);

  // Gerar resposta com base nas respostas verdadeiras ou falsas aleat√≥rias e na porcentagem de probabilidade
  let response2 = '*‚ö†Ô∏è Verificador de chances de ser adm ‚ö†Ô∏è*\n\nüëÆ‚Äç‚ôÇÔ∏è Iniciando an√°lise üëÆ‚Äç‚ôÇÔ∏è\n\n';

  response2 += `*Advert√™ncia:* ${isNameAdm ? '‚ùå falso' : '‚úÖ verdadeiro'}\n`;
  response2 += `*Participa√ß√£o:* ${isPhotoAdm ? '‚ùå falsa' : '‚úÖ verdadeira'}\n`;
  response2 += `*Intera√ß√£o:* ${isUsernameAdm ? '‚ùå falso' : '‚úÖ verdadeiro'}\n`;
  response2 += `*Novas ideias para grupo:* ${isTypingStyleAdm ? '‚ùå falsa' : '‚úÖ verdadeira'}\n\n`;

  response2 += `üîÑCarregando informa√ß√µes...üîÑ \n\nResultado: Existe a probabilidade de *${probability}% de voc√™ ser Adms.üëÄ*`;

  bot.sendMessage(chatId, response2, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
});



bot.onText(/\/signo/, (msg) => {
    const signos = [
      { nome: '√Åries', emoji: '‚ôàÔ∏è', descricao: 'Pessoas arianas s√£o conhecidas por sua coragem, determina√ß√£o e energia. Elas s√£o l√≠deres naturais e gostam de desafios.', dataInicio: '21 de mar√ßo', dataFim: '19 de abril' },
      { nome: 'Touro', emoji: '‚ôâÔ∏è', descricao: 'Pessoas taurinas s√£o conhecidas por sua perseveran√ßa, confiabilidade e sensualidade. Elas s√£o leais e gostam de conforto e estabilidade.', dataInicio: '20 de abril', dataFim: '20 de maio' },
      { nome: 'G√™meos', emoji: '‚ôäÔ∏è', descricao: 'Pessoas geminianas s√£o conhecidas por sua versatilidade, curiosidade e intelig√™ncia. Elas s√£o soci√°veis e gostam de novidades e mudan√ßas.', dataInicio: '21 de maio', dataFim: '20 de junho' },
      { nome: 'C√¢ncer', emoji: '‚ôãÔ∏è', descricao: 'Pessoas cancerianas s√£o conhecidas por sua sensibilidade, empatia e intui√ß√£o. Elas s√£o protetoras e gostam de estar em ambientes acolhedores.', dataInicio: '21 de junho', dataFim: '22 de julho' },
      { nome: 'Le√£o', emoji: '‚ôåÔ∏è', descricao: 'Pessoas leoninas s√£o conhecidas por sua autoconfian√ßa, criatividade e generosidade. Elas gostam de estar no centro das aten√ß√µes e de serem reconhecidas.', dataInicio: '23 de julho', dataFim: '22 de agosto' },
      { nome: 'Virgem', emoji: '‚ôçÔ∏è', descricao: 'Pessoas virginianas s√£o conhecidas por sua praticidade, perfeccionismo e intelig√™ncia. Elas s√£o organizadas e gostam de resolver problemas.', dataInicio: '23 de agosto', dataFim: '22 de setembro' },
      { nome: 'Libra', emoji: '‚ôéÔ∏è', descricao: 'Pessoas librianas s√£o conhecidas por sua diplomacia, equil√≠brio e sociabilidade. Elas valorizam a harmonia e gostam de estar em grupos.', dataInicio: '23 de setembro', dataFim: '22 de outubro' },
      { nome: 'Escorpi√£o', emoji: '‚ôèÔ∏è', descricao: 'Pessoas escorpianas s√£o conhecidas por sua intensidade, mist√©rio e paix√£o. Elas s√£o profundas e gostam de ter controle sobre as situa√ß√µes.', dataInicio: '23 de outubro', dataFim: '21 de novembro' },
      { nome: 'Sagit√°rio', emoji: '‚ôêÔ∏è', descricao: 'Pessoas sagitarianas s√£o conhecidas por sua liberdade, otimismo e esp√≠rito aventureiro. Elas gostam de explorar e descobrir coisas novas.', dataInicio: '22 de novembro', dataFim: '21 de dezembro' },
      { nome: 'Capric√≥rnio', emoji: '‚ôëÔ∏è', descricao: 'Pessoas capricornianas s√£o conhecidas por sua ambi√ß√£o, disciplina e determina√ß√£o. Elas s√£o respons√°veis e gostam de alcan√ßar metas.', dataInicio: '22 de dezembro', dataFim: '19 de janeiro' },
      { nome: 'Aqu√°rio', emoji: '‚ôíÔ∏è', descricao: 'Pessoas aquarianas s√£o conhecidas por sua originalidade, independ√™ncia e idealismo. Elas s√£o inovadoras e gostam de quebrar padr√µes estabelecidos.', dataInicio: '20 de janeiro', dataFim: '18 de fevereiro' },
      { nome: 'Peixes', emoji: '‚ôìÔ∏è', descricao: 'Pessoas piscianas s√£o conhecidas por sua sensibilidade, intui√ß√£o e imagina√ß√£o. Elas s√£o emp√°ticas e gostam de ajudar os outros.', dataInicio: '19 de fevereiro', dataFim: '20 de mar√ßo' }
      ];
    
  // Escolhe aleatoriamente o signo correspondente
  const signo = signos[Math.floor(Math.random() * signos.length)];

  const respostaSigno = `*Seu signo*\n\n*Nome:* ${signo.nome} ${signo.emoji} \n\n*Descri√ß√£o:* ${signo.descricao} \n\n*In√≠cio:* ${signo.dataInicio} \n\n*Fim:* ${signo.dataFim}`;
  // Resposta ao usu√°rio
  bot.sendMessage(msg.chat.id, respostaSigno, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
});


// mapeamento dos emojis num√©ricos
const emojisNumericos = [
  '0Ô∏è‚É£',
  '1Ô∏è‚É£',
  '2Ô∏è‚É£',
  '3Ô∏è‚É£',
  '4Ô∏è‚É£',
  '5Ô∏è‚É£',
  '6Ô∏è‚É£',
  '7Ô∏è‚É£',
  '8Ô∏è‚É£',
  '9Ô∏è‚É£',
  'üîü',
];

// manipulador para o comando /numerodasorte
bot.onText(/\/numerodasorte/, (msg) => {
  const chatId = msg.chat.id;

  // gera um n√∫mero aleat√≥rio com 6 algarismos
  const numero = Math.floor(Math.random() * 1000000).toString().padStart(6, '0');

  // converte cada algarismo em um emoji num√©rico
  const emojis = numero.split('').map((algarismo) => emojisNumericos[parseInt(algarismo)]);

  // cria uma mensagem com os emojis de n√∫mero
  const mensagem = `*N√∫mero da para jogar na Mega-Sena* \n\nüé∞ Seu n√∫mero da sorte √©: ${emojis.join('')} \n\nVai apostar?üòé`;

  // envia a mensagem para o chat
  bot.sendMessage(chatId, mensagem, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
});




// lista de desafios com emojis e explica√ß√µes
const desafios = [
  {
    emoji: 'üèãÔ∏è‚Äç‚ôÇÔ∏è',
    explicacao: 'Fazer 20 flex√µes',
  },
  {
    emoji: 'üèÉ‚Äç‚ôÄÔ∏è',
    explicacao: 'Correr 5 km em menos de 30 minutos',
  },
  {
    emoji: 'üßò‚Äç‚ôÇÔ∏è',
    explicacao: 'Meditar por 10 minutos',
  },
  {
    emoji: 'üìö',
    explicacao: 'Ler um livro inteiro em um dia',
  },
  {
    emoji: 'üé®',
    explicacao: 'Desenhar um retrato realista',
  },
  {
    emoji: 'üéØ',
    explicacao: 'Acertar 10 tiros em um alvo a 10 metros de dist√¢ncia',
  },
  {
    emoji: 'üßó‚Äç‚ôÇÔ∏è',
    explicacao: 'Escalar uma parede de escalada com 10 metros de altura',
  },
  {
    emoji: 'üèä‚Äç‚ôÄÔ∏è',
    explicacao: 'Nadar 1 km sem parar',
  },
  {
    emoji: 'üéπ',
    explicacao: 'Aprender a tocar uma m√∫sica nova no piano',
  },
  {
    emoji: 'üö¥‚Äç‚ôÇÔ∏è',
    explicacao: 'Andar de bicicleta por 50 km em um dia',
  },
  {
    emoji: 'üßò‚Äç‚ôÄÔ∏è',
    explicacao: 'Fazer uma aula de yoga avan√ßada',
  },
  {
    emoji: 'üé¨',
    explicacao: 'Escrever, dirigir e editar um curta-metragem de 5 minutos',
  },
  {
    emoji: 'üè≠',
    explicacao: 'Construir uma pe√ßa de mob√≠lia do zero',
  },
  {
    emoji: 'üìù',
    explicacao: 'Escrever um poema ou conto curto',
  },
  {
    emoji: 'üé®',
    explicacao: 'Pintar um retrato a √≥leo',
  },
];

// manipulador para o comando /desafio
bot.onText(/\/desafio/, (msg) => {
  const chatId = msg.chat.id;

  // escolhe um desafio aleat√≥rio da lista
  const desafio = desafios[Math.floor(Math.random() * desafios.length)];

  // cria uma mensagem com o emoji e a explica√ß√£o do desafio
  const mensagem = `*üèÜ VOC√ä FOI DESAFIO üèÜ* \n\nVoc√™ ter√° que: \n\n${desafio.emoji} ${desafio.explicacao}`;

  // envia a mensagem para o chat
  bot.sendMessage(chatId, mensagem, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
});




  const categorias = [
    {
      emoji: 'üé¨',
      descricao: 'A√ß√£o',
      sobre: 'Filmes de a√ß√£o geralmente envolvem cenas de luta, persegui√ß√µes e tiroteios. S√£o conhecidos por terem muita adrenalina e emo√ß√£o.',
    },
    {
      emoji: 'üé≠',
      descricao: 'Drama',
      sobre: 'Filmes de drama s√£o conhecidos por envolverem conflitos emocionais e problemas pessoais dos personagens. Podem ser baseados em hist√≥rias verdadeiras ou fict√≠cias.',
    },
    {
      emoji: 'ü§ñ',
      descricao: 'Fic√ß√£o Cient√≠fica',
      sobre: 'Filmes de fic√ß√£o cient√≠fica apresentam conceitos e ideias futuristas, cient√≠ficas ou tecnol√≥gicas. Podem envolver viagens no tempo, realidades alternativas e alien√≠genas.',
    },
    {
      emoji: 'üëª',
      descricao: 'Terror',
      sobre: 'Filmes de terror s√£o conhecidos por assustar e causar medo no p√∫blico. Podem envolver fantasmas, monstros e serial killers.',
    },
    {
      emoji: 'ü§†',
      descricao: 'Western',
      sobre: 'Filmes de western se passam no Velho Oeste americano e envolvem tiroteios, duelos e cavalgadas. S√£o conhecidos por seus personagens emblem√°ticos, como xerifes, cowboys e foras-da-lei.',
    },
    {
      emoji: 'üé•',
      descricao: 'Document√°rio',
      sobre: 'Filmes document√°rios apresentam fatos e informa√ß√µes sobre um determinado assunto ou evento. Podem ser sobre a natureza, hist√≥ria ou pol√≠tica, por exemplo.',
    },
    {
      emoji: 'üçø',
      descricao: 'Com√©dia',
      sobre: 'Filmes de com√©dia s√£o conhecidos por fazerem o p√∫blico rir. Podem envolver piadas, situa√ß√µes engra√ßadas e personagens c√¥micos.',
    },
    {
      emoji: 'üëä',
      descricao: 'Artes Marciais',
      sobre: 'Filmes de artes marciais apresentam lutas e t√©cnicas de combate de diferentes disciplinas, como karat√™, jud√¥ e kung fu.',
    },
    {
      emoji: 'üßù‚Äç‚ôÇÔ∏è',
      descricao: 'Fantasia',
      sobre: 'Filmes de fantasia envolvem elementos m√°gicos e sobrenaturais, como drag√µes, elfos e magia. Podem ser baseados em livros e lendas.',
    },
    {
      emoji: 'üåä',
      descricao: 'Aventura',
      sobre: 'Filmes de aventura envolvem jornadas, explora√ß√µes e descobertas. Podem envolver elementos de a√ß√£o e fic√ß√£o cient√≠fica.',
    },
  ];
  bot.onText(/\/filme/, (msg) => {
    const chatId = msg.chat.id;

  // Escolhe aleatoriamente uma categoria
  const categoria = categorias[Math.floor(Math.random() * categorias.length)];

  const respostaFilme = `*üé¨ Sua cateogria filme preferida üé¨* \n\n*Nome:* ${categoria.descricao} ${categoria.emoji} \n\n*Descri√ß√£o:* ${categoria.sobre}`;

  bot.sendMessage(chatId, respostaFilme, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
});




const climas = [
  {
    nome: 'Ver√£o',
    emoji: '‚òÄÔ∏è',
    caracteristica: 'Dia ensolarado e quente',
  },
  {
    nome: 'Primavera',
    emoji: 'üå∏',
    caracteristica: 'Clima agrad√°vel e florescimento da natureza',
  },
  {
    nome: 'Outono',
    emoji: 'üçÅ',
    caracteristica: 'Folhas secas e clima fresco',
  },
  {
    nome: 'Inverno',
    emoji: '‚ùÑÔ∏è',
    caracteristica: 'Neve e clima frio',
  },
];

bot.onText(/\/clima/, (msg) => {
  const chatId = msg.chat.id;
  const randomIndex = Math.floor(Math.random() * climas.length);
  const clima = climas[randomIndex];
  bot.sendMessage(chatId, `*üå§Seu clima favoritoüå§* \n\n*Nome:* ${clima.nome} ${clima.emoji} \n\n*Caracter√≠stica:* ${clima.caracteristica}`, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
});




const estilosMusicais = [
  {
    nome: 'Rock',
    emoji: 'üé∏',
    caracteristica: 'M√∫sica com guitarras e bateria',
  },
  {
    nome: 'Pop',
    emoji: 'üé§',
    caracteristica: 'M√∫sica popular e comercial',
  },
  {
    nome: 'Hip Hop',
    emoji: 'üéß',
    caracteristica: 'Ritmo com batidas de rap e vocais',
  },
  {
    nome: 'Eletr√¥nica',
    emoji: 'üéß',
    caracteristica: 'M√∫sica eletr√¥nica com batidas e sintetizadores',
  },
];

bot.onText(/\/musica/, (msg) => {
  const chatId = msg.chat.id;
  const randomIndex = Math.floor(Math.random() * estilosMusicais.length);
  const estilo = estilosMusicais[randomIndex];
  bot.sendMessage(chatId, `*üéºSeu estilo musicalüéº* \n\n*Nome:* ${estilo.nome} ${estilo.emoji}  \n\n*Caracter√≠stica:* ${estilo.caracteristica}`, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
});





const origens = [
  {
    nome: 'Pernambucano',
    emoji: 'ü¶à',
  },
  {
    nome: 'Cearense',
    emoji: 'üèñÔ∏è',
  },
  {
    nome: 'Paraibano',
    emoji: 'ü¶ê',
  },
  {
    nome: 'Potiguar',
    emoji: 'üçç',
  },
  {
    nome: 'Sul-Mato-Grossense',
    emoji: 'üêÜ',
  },
  {
    nome: 'Brasiliense',
    emoji: 'üèõÔ∏è',
  },
  {
    nome: 'Capixaba',
    emoji: 'üåä',
  },
  {
    nome: 'Catarinense',
    emoji: 'üèûÔ∏è',
  },
  {
    nome: 'Fluminense',
    emoji: 'üåâ',
  },
  {
    nome: 'Goi√¢no',
    emoji: 'üåµ',
  },
  {
    nome: 'Maranhense',
    emoji: 'üçç',
  },
  {
    nome: 'Mato-Grossense',
    emoji: 'üêÉ',
  },
  {
    nome: 'Paraense',
    emoji: 'ü¶ú',
  },
  {
    nome: 'Piauiense',
    emoji: 'üåµ',
  },
  {
    nome: 'Rio-Grandense',
    emoji: 'üêé',
  },
  {
    nome: 'Rondoniense',
    emoji: 'üêÜ',
  },
  {
    nome: 'Roraimense',
    emoji: 'ü¶ú',
  },
  {
    nome: 'Sergipano',
    emoji: 'üåä',
  },
  {
    nome: 'Tocantinense',
    emoji: 'üåµ',
  },
  {
    nome: 'Acreano',
    emoji: 'üêí',
  },
  {
    nome: 'Alagoano',
    emoji: 'üå¥',
  },
  {
    nome: 'Amapaense',
    emoji: 'ü¶ú',
  },
  {
    nome: 'Paranaibano',
    emoji: 'üå≤',
  },
  {
    nome: 'Paulistano',
    emoji: 'üåÜ',
  },
];

bot.onText(/\/origem/, (msg) => {
  const chatId = msg.chat.id;
  const randomIndex = Math.floor(Math.random() * origens.length);
  const origem = origens[randomIndex];
  bot.sendMessage(chatId, `Sua origem √©: *${origem.nome} ${origem.emoji}*`, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown' });
});


bot.onText(/\/jogo/, (msg) => {
  const chatId = msg.chat.id;

  // gera um n√∫mero aleat√≥rio entre 0 e 5
  const randomIndex = Math.floor(Math.random() * 6);

  switch (randomIndex) {
    case 0:
      bot.sendDice(chatId, { emoji: 'üé≤', animation_duration: 5, reply_to_message_id: msg.message_id });
      break;
    case 1:
      bot.sendDice(chatId, { emoji: 'üéØ', animation_duration: 5, reply_to_message_id: msg.message_id });
      break;
    case 2:
      bot.sendDice(chatId, { emoji: 'üé≥', animation_duration: 5, reply_to_message_id: msg.message_id });
      break;
    case 3:
      bot.sendDice(chatId, { emoji: '‚öΩÔ∏è', animation_duration: 5, reply_to_message_id: msg.message_id });
      break;
    case 4:
      bot.sendDice(chatId, { emoji: 'üé∞', animation_duration: 5, reply_to_message_id: msg.message_id });
      break;
    case 5:
      bot.sendDice(chatId, { emoji: 'üèÄ', animation_duration: 5, reply_to_message_id: msg.message_id });
      break;
  }
});




bot.onText(/\/cor/, (msg) => {
  // Lista de cores preferidas
  const cores = ['üî¥ Vermelho', 'üü† Laranja', 'üü° Amarelo', 'üü¢ Verde', 'üîµ Azul', 'üü£ Roxo', 'ü§ç Branco', 'üñ§ Preto'];

  // Escolhe uma cor aleat√≥ria
  const corAleatoria = cores[Math.floor(Math.random() * cores.length)];

  // Envia a mensagem de resposta com a cor escolhida
  bot.sendMessage(msg.chat.id, `Sua cor preferida √© ${corAleatoria}!`, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown'});
});


// Crie o comando /crush que ir√° enviar a primeira letra aleat√≥ria do crush com um emoji
bot.onText(/\/crush/, (msg) => {
  const chatId = msg.chat.id;
  const letras = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
  const emojis = ['‚ù§Ô∏è', '‚ù§Ô∏è', 'üíò', 'üíï', 'üòç', 'üòò'];

  // Seleciona uma letra e um emoji aleat√≥rio
  const letra = letras.charAt(Math.floor(Math.random() * letras.length));
  const emoji = emojis[Math.floor(Math.random() * emojis.length)];

  // Envia a mensagem com a letra e o emoji escolhido
  bot.sendMessage(chatId, `A primeira letra do meu crush √© "${letra}" ${emoji}`, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown'});
});


bot.onText(/\/crussh/, (msg) => {
  const chatId = msg.chat.id;
  const letras = 'L';
  const emojis = ['‚ù§Ô∏è', '‚ù§Ô∏è', 'üíò', 'üíï', 'üòç', 'üòò'];

  // Seleciona uma letra e um emoji aleat√≥rio
  const letra = letras.charAt(Math.floor(Math.random() * letras.length));
  const emoji = emojis[Math.floor(Math.random() * emojis.length)];

  // Envia a mensagem com a letra e o emoji escolhido
  bot.sendMessage(chatId, `A primeira letra do meu crush √© "${letra}" ${emoji}`, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown'});
});






bot.onText(/\/help/, (msg) => {
  const commands = [
'/felicidade - medidor de n√≠vel de felicidade üôÇ\n',
'/raiva - medidor de n√≠vel de raiva ü§¨\n',
'/estado - adivinha qual estado voc√™ mora üåè\n',
'/stickers - envia uma figurinha\n',
'/presidente - adivinha qual √© o seu presidente üáßüá∑\n',
'/sorte - veja sua sorte\n',
'/genero - adivinha qual √© o seu g√™nero ‚öß\n',
'/casamento - adivinha a data do seu casamento üë®‚Äç‚ù§Ô∏è‚Äçüë®\n',
'/nascimento - adivinha a data do seu nascimento\n',
'/morte - adivinha a data da sua morte üòµ\n',
'/filho - adivinha o nome, g√™nero e quando voc√™ vai ter um filho üë∂\n',
'/signo - adivinha seu signo ‚ôàÔ∏è\n',
'/religiao - adivinha sua religi√£o ü§ç\n',
'/ator - adivinha seu ator/atriz preferida ü•∞\n',
'/altura - adivinha sua altura ü§è\n',
'/idade - adivinha sua idade üéØ\n',
'/sistema - adivinha seu socioecon√¥mico-pol√≠ticos üé´\n',
'/profissao - adivinha sua profiss√£o üíº\n',
'/saudades - escolha de 0 a 100 quanto de saudades voc√™ tem üò∞\n',
'/ciumes - escolha de 0 a 100 quanto de ci√∫mes voc√™ tem üò†\n',
'/origem - adivinha sua origem üå±\n',
'/apaixonado - medidor de n√≠vel de paix√£o üòç\n',
'/gado - medidor de n√≠vel de gado üêÆ\n',
'/tpm - medidor de n√≠vel de TPM üò§\n',
'/gostosura - medidor de n√≠vel de gostosura üòà\n',
'/chato - medidor de n√≠vel de chatice üòí\n',
'/burro - medidor de n√≠vel de burrice ü•¥\n',
'/treteiro - medidor de n√≠vel de tretas ü§¨\n',
'/sexo - medidor de n√≠vel de potencial sexual üîû\n',
'/fake - descobre se voc√™ √© fake üõÉ\n',
'/serbanido - descobre se voc√™ vai ser banido üö∑\n',
'/seradm - descobre se voc√™ pode ser adm üëÆ‚Äç‚ôÄÔ∏è\n',
'/filme - adivinha a categoria de filme preferido üé¨\n',
'/clima - adivinha seu clima preferido üå™\n',
'/numerodasorte - gera seu n√∫mero da sorte üé∞\n',
'/desafio - prop√µe um desafio para voc√™ üèÜ\n',
'/musica - adivinha seu estilo musical preferido üéº\n',
'/jogo - envia um game aleat√≥rio üéÆ\n',
'/cor - adivinha sua cor preferidaüî¥\n',
'/crush - adivinha a primeira letra do seu crushü•∞\n',
'/time - adivinha seu time do cora√ß√£oüòÇ\n',
'/fruta - adivinha sua fruta preferidaüçé\n',
'/curiosidade - envia aleatoriamente curiosidade sobre o mundoüëÄ\n',
'/sigma - mede seu n√≠vel sigmaüóøüç∑'
  ];

  const helpMessage = 'Lista de Comandos: \n\n' + commands.join('\n');

  bot.sendMessage(msg.chat.id, helpMessage);
});






// Dados do time
const times = [
  {
    nome: 'Flamengo',
    imagemUrl: 'https://freevectorlogo.net/wp-content/uploads/2012/11/clube-de-regatas-do-flamengo-logo-vector-400x400.png',
    estadio: 'Maracan√£',
    anoCriacao: '1895',
    mascote: 'Urubu',
    curiosidade: 'O Flamengo √© o clube de futebol mais popular do Brasil, com a maior torcida do pa√≠s.',
    brasileiroes: 8
  },
  {
    nome: 'Corinthians',
    imagemUrl: 'https://knoow.net/wp-content/uploads/2016/11/Logo-Corinthians.png',
    estadio: 'Neo Qu√≠mica Arena',
    anoCriacao: '1910',
    mascote: 'Mosqueteiro',
    curiosidade: 'O Corinthians √© o clube de futebol com a maior torcida do estado de S√£o Paulo.',
    brasileiroes: 7
  },
  {
    nome: 'S√£o Paulo',
    imagemUrl: 'https://pbs.twimg.com/profile_images/1426319619200110596/m6gH60GL_400x400.jpg',
    estadio: 'Morumbi',
    anoCriacao: '1930',
    mascote: 'S√£o Paulo Man',
    curiosidade: 'O S√£o Paulo √© o clube de futebol brasileiro com mais t√≠tulos internacionais, com 12 conquistas.',
    brasileiroes: 6
  },
  {
    nome: 'Palmeiras',
    imagemUrl: 'https://pbs.twimg.com/profile_images/1611063929916035095/se9po_Sh_400x400.jpg',
    estadio: 'Allianz Parque',
    anoCriacao: '1914',
    mascote: 'Periquito',
    curiosidade: 'O Palmeiras √© o clube de futebol brasileiro com mais t√≠tulos nacionais, com 14 conquistas.',
    brasileiroes: 11
  },
  {
    nome: 'Santos',
    imagemUrl: 'https://pbs.twimg.com/profile_images/1615807063950598144/tSi5F77L_400x400.jpg',
    estadio: 'Vila Belmiro',
    anoCriacao: '1912',
    mascote: 'Baleia',
    curiosidade: 'O Santos √© o clube de futebol brasileiro com mais t√≠tulos da Copa Libertadores da Am√©rica, com 3 conquistas.',
    brasileiroes: 8
  },
  {
    nome: 'Internacional',
    imagemUrl: 'https://pbs.twimg.com/profile_images/1609276600582799362/iEniyUQp_400x400.png',
    estadio: 'Beira-Rio',
    anoCriacao: '1909',
    mascote: 'Sac√≠',
    curiosidade: 'O Internacional √© o clube de futebol brasileiro com mais t√≠tulos internacionais no s√©culo XX, com 7 conquistas.',
    brasileiroes: 3
    },
    {
    nome: 'Gr√™mio',
    imagemUrl: 'https://pbs.twimg.com/profile_images/1587444689568993280/jqTDMBmJ_400x400.jpg',
    estadio: 'Arena do Gr√™mio',
    anoCriacao: '1903',
    mascote: 'Mosqueteiro',
    curiosidade: 'O Gr√™mio √© o clube de futebol brasileiro com mais t√≠tulos da Copa do Brasil, com 6 conquistas.',
    brasileiroes: 2
    },
    {
    nome: 'Atl√©tico-MG',
    imagemUrl: 'https://pbs.twimg.com/profile_images/1467629667268112390/Ge6CuQfD_400x400.jpg',
    estadio: 'Mineir√£o',
    anoCriacao: '1908',
    mascote: 'Galo',
    curiosidade: 'O Atl√©tico-MG √© o clube de futebol brasileiro com mais t√≠tulos da Copa Conmebol, com 2 conquistas.',
    brasileiroes: 2
    },
    {
      nome: 'Cruzeiro',
      imagemUrl: 'https://pbs.twimg.com/media/ENQk13uW4AAU4nK?format=jpg&name=small',
      estadio: 'Mineir√£o',
      anoCriacao: '1921',
      mascote: 'Raposa',
      curiosidade: 'O Cruzeiro √© o clube de futebol brasileiro com mais t√≠tulos da Copa do Brasil, ao lado do Gr√™mio, com 6 conquistas.',
      brasileiroes: 4
      },
      {
        nome: 'Fluminense',
        imagemUrl: 'https://pbs.twimg.com/profile_images/1609912077786746885/2F0rzkrh_400x400.jpg',
        estadio: 'Maracan√£',
        anoCriacao: '1902',
        mascote: 'Guerreiro',
        curiosidade: 'O Fluminense √© o clube de futebol brasileiro que mais conquistou o Campeonato Carioca, com 31 t√≠tulos.',
        brasileiroes: 4
        },
        {
          nome: 'Botafogo',
          imagemUrl: 'https://pbs.twimg.com/profile_images/1617191347852656641/Eb_gIMxP_400x400.jpg',
          estadio: 'Engenh√£o',
          anoCriacao: '1904',
          mascote: 'Alvinegro',
          curiosidade: 'O Botafogo √© o clube de futebol brasileiro que mais vezes foi vice-campe√£o do Campeonato Brasileiro, com 5 vice-campeonatos.',
          brasileiroes: 2
          },
          {
            nome: 'Vasco',
            imagemUrl: 'https://pbs.twimg.com/profile_images/1620489733687083010/PRxiI2Jk_400x400.jpg',
            estadio: 'S√£o Janu√°rio',
            anoCriacao: '1898',
            mascote: 'Gigante',
            curiosidade: 'O Vasco √© o clube de futebol brasileiro que mais vezes foi campe√£o da Copa do Brasil, com 4 conquistas.',
            brasileiroes: 4
            },
            {
              nome: 'Cear√°',
              imagemUrl: 'https://pbs.twimg.com/profile_images/1587278883732217857/lro974U6_400x400.jpg',
              estadio: 'Arena Castel√£o',
              anoCriacao: '1914',
              mascote: 'Voz√£o',
              curiosidade: 'O apelido "Voz√£o" surgiu em 1969, quando o Cear√° disputou a Ta√ßa Brasil e foi elogiado pela voz forte de sua torcida.',
              brasileiroes: 0 
            },
            {
              nome: 'Chapecoense',
              imagemUrl: 'https://pbs.twimg.com/profile_images/934097344655773696/3K95PVdH_400x400.jpg',
              estadio: 'Arena Cond√°',
              anoCriacao: '1973',
              mascote: '√çndio Cond√°',
              curiosidade: 'A Chapecoense √© o √∫nico clube de Santa Catarina a conquistar um t√≠tulo internacional, a Copa Sul-Americana de 2016.',
              brasileiroes: 0
            },
            {
              nome: 'Coritiba',
              imagemUrl: 'https://pbs.twimg.com/profile_images/1610677205981437953/L-ak1cT2_400x400.jpg',
              estadio: 'Couto Pereira',
              anoCriacao: '1909',
              mascote: 'Vov√¥ Coxa',
              curiosidade: 'O Coritiba foi o primeiro time brasileiro a realizar uma excurs√£o ao exterior, em 1928, jogando na Europa.',
              brasileiroes: 1
            },
            {
              nome: 'CSA',
              imagemUrl: 'https://pbs.twimg.com/profile_images/1613677488726589442/de0A7nA__400x400.jpg',
              estadio: '',
              anoCriacao: '',
              mascote: '',
              curiosidade: '',
              brasileiroes: 0 
            },
            {
              nome: 'Atl√©tico-PR',
              imagemUrl: 'https://static-wp-tor15-prd.torcedores.com/wp-content/uploads/2018/03/atletico-pr-300x300.jpg',
              estadio: 'Arena da Baixada',
              anoCriacao: '1924',
              mascote: 'Furac√£o',
              curiosidade: 'Foi o primeiro clube do sul do pa√≠s a conquistar um t√≠tulo internacional, a Sul-Americana de 2018.',
              brasileiroes: 1
            },
            {
              nome: 'Bahia',
              imagemUrl: 'https://pbs.twimg.com/profile_images/1611322042212651010/ZtlPQ8BG_400x400.jpg',
              estadio: 'Arena Fonte Nova',
              anoCriacao: '1931',
              mascote: 'Super-homem',
              curiosidade: 'Foi o primeiro clube do Norte-Nordeste a conquistar um t√≠tulo internacional, a Copa do Nordeste de 2002.',
              brasileiroes: 2 
            },
            {
              nome: 'Goi√°s ',
              imagemUrl: 'https://pbs.twimg.com/profile_images/1611755823687950336/sgvpPTvR_400x400.jpg',
              estadio: 'Serra Dourada',
              anoCriacao: '1943',
              mascote: 'Verd√£o',
              curiosidade: '√â o √∫nico clube goiano a ter participado da Copa Libertadores da Am√©rica e a ter chegado a uma final de Copa Sul-Americana e de Copa do Brasil. ',
              brasileiroes: 0 
            },
            {
              nome: 'Red Bull Bragantino',
              imagemUrl: 'https://pbs.twimg.com/profile_images/1609503108261978112/cFXWKxiE_400x400.jpg',
              estadio: 'Est√°dio Nabi Abi Chedid',
              anoCriacao: '1928',
              mascote: 'Touro',
              curiosidade: 'O clube foi fundado como Bragantino, mas em 2019 foi comprado pelo grupo Red Bull e mudou seu nome.',
              brasileiroes: 0 
            },
            {
              nome: 'Fortaleza',
              imagemUrl: 'https://pbs.twimg.com/profile_images/1603764504126492674/iZs-LGQQ_400x400.jpg',
              estadio: 'Arena Castel√£o',
              anoCriacao: '1918',
              mascote: 'Le√£o',
              curiosidade: 'O Fortaleza foi o primeiro clube do Nordeste a disputar uma final de Campeonato Brasileiro, em 1960.',
              brasileiroes: 0 
            },
            {
              nome: 'Sport',
              imagemUrl: 'https://pbs.twimg.com/profile_images/1620504487713546318/_iC_8nMh_400x400.jpg',
              estadio: 'Ilha do Retiro',
              anoCriacao: '1905',
              mascote: 'Le√£o',
              curiosidade: 'O Sport √© o √∫nico clube do Nordeste a disputar a Libertadores da Am√©rica.',
              brasileiroes: 1 
            },
            {
              nome: 'Santa Cruz',
              imagemUrl: 'https://pbs.twimg.com/profile_images/1625890990383943682/eKSnyAos_400x400.jpg',
              estadio: 'Arruda',
              anoCriacao: '1914',
              mascote: 'Cobra Coral',
              curiosidade: 'O Santa Cruz √© o time pernambucano que mais vezes participou do Campeonato Brasileiro.',
              brasileiroes: 0 
            },
            {
              nome: 'Vila Nova',
              imagemUrl: 'https://pbs.twimg.com/profile_images/1610447696812285955/Nfi4_Az9_400x400.jpg',
              estadio: 'On√©sio Brasileiro Alvarenga',
              anoCriacao: '1943',
              mascote: 'Tigr√£o',
              curiosidade: 'O Vila Nova √© o √∫nico clube goiano a disputar a S√©rie A do Campeonato Brasileiro.',
              brasileiroes: 0 
            },
            {
              nome: 'Salgueiro',
              imagemUrl: 'https://pbs.twimg.com/profile_images/1131931961/2010_sac_topo2_400x400.jpg',
              estadio: 'Corn√©lio de Barros',
              anoCriacao: '1999',
              mascote: 'Carcar√°',
              curiosidade: 'O Salgueiro √© o √∫nico clube do sert√£o pernambucano que disputou a S√©rie C do Campeonato Brasileiro.',
              brasileiroes: 0 
            },
            {
              nome: 'Atl√©tico-GO',
              imagemUrl: 'https://pbs.twimg.com/profile_images/1229374310659379200/RpeEwctQ_400x400.jpg',
              estadio: 'Ant√¥nio Accioly',
              anoCriacao: '1937',
              mascote: 'Drag√£o',
              curiosidade: 'O Atl√©tico-GO √© o √∫nico clube goiano que j√° participou da S√©rie A do Campeonato Brasileiro.',
              brasileiroes: 0 
            },
            {
              nome: 'Vit√≥ria',
              imagemUrl: 'https://pbs.twimg.com/profile_images/1587778873592320000/UABdZsRp_400x400.jpg',
              estadio: 'Manoel Barradas',
              anoCriacao: '1899',
              mascote: 'Le√£o',
              curiosidade: 'O Vit√≥ria √© o clube baiano com mais participa√ß√µes na S√©rie A do Campeonato Brasileiro.',
              brasileiroes: 0 
            },
      ];


// Fun√ß√£o para gerar emojis de estrelas
function gerarEstrelas(n) {
  let estrelas = '';
  for (let i = 0; i < n; i++) {
    estrelas += '‚≠êÔ∏è';
  }
  return estrelas;
}

// Resposta ao comando /time
bot.onText(/\/time/, (msg, match) => {
  // Seleciona um time aleat√≥rio
  const time = times[Math.floor(Math.random() * times.length)];
  // Gera emojis de estrelas para o n√∫mero de brasileir√µes ganhos
  const estrelas = gerarEstrelas(time.brasileiroes);
  // Formata as informa√ß√µes do time
  const informacoes = `Seu time do cora√ß√£o √© o *${time.nome}* ‚ù§Ô∏è\n\n*Est√°dio:* ${time.estadio} \n*Ano de cria√ß√£o:* ${time.anoCriacao} \n*Mascote:* ${time.mascote} \n*Curiosidades:* ${time.curiosidade} \n*Brasileir√µes:* ${estrelas}`;

  // Envia a imagem com as informa√ß√µes do time
  bot.sendPhoto(msg.chat.id, time.imagemUrl, { caption: informacoes, parse_mode: 'Markdown', reply_to_message_id: msg.message_id });
  console.log()
});




const frutas = [
  {
    nome: 'Banana',
    emoji: 'üçå',
    beneficios: 'Rica em pot√°ssio e vitaminas C e B6. Ajuda na digest√£o e regula o intestino.',
    maleficios: 'Pode causar alergias em pessoas sens√≠veis e pode ser prejudicial para quem tem diabetes.',
    local_tipico: 'Origin√°ria do sudeste asi√°tico, a banana √© cultivada em diversas regi√µes tropicais do mundo.'
  },
  {
    nome: 'Ma√ß√£',
    emoji: 'üçé',
    beneficios: 'Rica em fibras, vitaminas C e K. Ajuda a prevenir doen√ßas card√≠acas e melhora a digest√£o.',
    maleficios: 'Pode causar alergias em pessoas sens√≠veis e pode ser prejudicial para quem tem diabetes.',
    local_tipico: 'A ma√ß√£ √© uma fruta origin√°ria do C√°ucaso, mas √© cultivada em diversas partes do mundo.'
  },
  {
    nome: 'Abacaxi',
    emoji: 'üçç',
    beneficios: 'Rico em vitamina C e bromelina, ajuda na digest√£o e fortalece o sistema imunol√≥gico.',
    maleficios: 'Pode causar alergias em pessoas sens√≠veis e pode ser prejudicial para quem tem problemas gastrointestinais.',
    local_tipico: 'Origin√°rio da Am√©rica do Sul, o abacaxi √© cultivado em diversas partes do mundo.'
  },
  {
    nome: 'Laranja',
    emoji: 'üçä',
    beneficios: 'Rica em vitamina C e antioxidantes, ajuda a fortalecer o sistema imunol√≥gico e reduzir o risco de doen√ßas cr√¥nicas.',
    maleficios: 'Pode causar alergias em pessoas sens√≠veis e o consumo excessivo pode levar a problemas dent√°rios.',
    local_tipico: 'A laranja √© uma fruta origin√°ria da √Åsia, mas √© cultivada em diversas partes do mundo.'
  },
  {
    nome: 'Morango',
    emoji: 'üçì',
    beneficios: 'Rico em vitamina C e antioxidantes, ajuda a fortalecer o sistema imunol√≥gico e reduzir o risco de doen√ßas cr√¥nicas.',
    maleficios: 'Pode causar alergias em pessoas sens√≠veis e o consumo excessivo pode levar a problemas digestivos.',
    local_tipico: 'O morango √© uma fruta origin√°ria da Europa, mas √© cultivado em diversas partes do mundo.'
  },
  {
    nome: 'Manga',
    emoji: 'ü•≠',
    beneficios: 'Rica em vitamina A e antioxidantes, ajuda a manter a sa√∫de dos olhos e da pele.',
    maleficios: 'Pode causar alergias em pessoas sens√≠veis e o consumo excessivo pode levar a problemas digestivos.',
    local_tipico: 'A manga √© uma fruta origin√°ria da √Åsia, mas √© cultivada em diversas partes do mundo.'
  },
  {
    nome: 'Kiwi',
    emoji: 'ü•ù',
    beneficios: 'Rico em vitamina C e fibras, ajuda a melhorar a digest√£o e a fortalecer o sistema imunol√≥gico.',
    maleficios: 'Pode causar alergias em pessoas sens√≠veis e o consumo excessivo pode levar a problemas digestivos.',
    local_tipico: 'O kiwi √© uma fruta origin√°ria da China, mas √© cultivado em diversas partes do mundo.'
  }
];




bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  
  if (msg.text.toLowerCase() === '/fruta') {
    const fruta = frutas[Math.floor(Math.random() * frutas.length)];
    const mensagem = `Sua fruta preferida √© *${fruta.nome}* ${fruta.emoji}\n\n*Benef√≠cios:* ${fruta.beneficios}\n*Malef√≠cios:* ${fruta.maleficios}\n*Local t√≠pico:* ${fruta.local_tipico}`;
    
    bot.sendMessage(chatId, mensagem, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown'});
  }
});







// comando /sigma
bot.onText(/\/sigma/, (msg) => {
  // gera um n√≠vel SIGMA aleat√≥rio entre 0 e 100%
  const nivelSigma = Math.floor(Math.random() * 101);
  
  // cria um gr√°fico de barra vertical com base no n√≠vel SIGMA
  let graficoSigma = '';
  for (let i = 0; i < 10; i++) {
    if (i < nivelSigma / 10) {
      graficoSigma += '‚¨õ'; // bloco preenchido
    } else {
      graficoSigma += '‚¨ú'; // bloco vazio
    }
  }

  // seleciona uma frase aleat√≥ria com base no n√≠vel SIGMA
  let fraseSigma;
  if (nivelSigma < 10) {
    fraseSigma = 'Voc√™ est√° no fundo do po√ßo...';
  } else if (nivelSigma < 20) {
    fraseSigma = 'N√£o desanime, voc√™ ainda pode melhorar!';
  } else if (nivelSigma < 30) {
    fraseSigma = 'Ainda tem muito a melhorar, mas j√° √© um come√ßo!';
  } else if (nivelSigma < 40) {
    fraseSigma = 'Est√° progredindo bem, continue assim!';
  } else if (nivelSigma < 50) {
    fraseSigma = 'Meio termo, n√£o est√° mal!';
  } else if (nivelSigma < 60) {
    fraseSigma = 'Acima da m√©dia, bom trabalho!';
  } else if (nivelSigma < 70) {
    fraseSigma = 'Est√° fazendo um √≥timo trabalho, parab√©ns!';
  } else if (nivelSigma < 80) {
    fraseSigma = 'Excelente trabalho, continue assim!';
  } else if (nivelSigma < 90) {
    fraseSigma = 'Quase l√°, falta pouco para a perfei√ß√£o!';
  } else {
    fraseSigma = 'N√≠vel m√°ximo, voc√™ √© incr√≠vel!';
  }

  // seleciona um GIF aleat√≥rio para enviar com base no n√≠vel SIGMA
  let gifSigma;
  if (nivelSigma < 30) {
    gifSigma = 'https://media.tenor.com/Wg9fW_XEft0AAAAC/pout-christian-bale.gif';
  } else if (nivelSigma < 20) {
    gifSigma = 'https://media.tenor.com/Xa3KRCTJUuUAAAAd/homelander-theboysfinale.gif';
  } else if (nivelSigma < 50) {
    gifSigma = 'https://media.tenor.com/lPcexeCDyZ8AAAAd/gentleman-giga-chad.gif';
  } else if (nivelSigma < 60) {
    gifSigma = 'https://media.tenor.com/1WyZr_xNiVwAAAAC/sigma-sigma-male.gif';
  } else if (nivelSigma < 70) {
    gifSigma = 'https://media.tenor.com/V69OjtC-eFAAAAAd/sigma-male-sigma-from-ohio.gif';
  } else if (nivelSigma < 90) {
    gifSigma = 'https://media.tenor.com/Rv4pV5ppmVsAAAAC/homelander-laser-eyes.gif';
  } else {
    gifSigma = 'https://media.tenor.com/QNpimm5BA-QAAAAd/good-day-smile.gif';
  }



// envia a resposta para o usu√°rio
bot.sendAnimation(msg.chat.id, gifSigma, {
  caption: `*SIGMA* üç∑üóø \n\nSeu n√≠vel SIGMA √© ${nivelSigma}% \n\n${fraseSigma}\n\n${graficoSigma} ${nivelSigma}%`,
  parse_mode: 'Markdown',
  reply_to_message_id: msg.message_id // adiciona o ID da mensagem original como par√¢metro de resposta
  });
  });





// Array com as curiosidades
const curiosidades = [
  'A lua cheia aparece no c√©u por cerca de 29 dias',
  'Os cavalos n√£o conseguem vomitar',
  'O primeiro computador foi inventado na d√©cada de 1940',
  'O som se propaga mais r√°pido na √°gua do que no ar',
  'A maior montanha-russa do mundo tem mais de 140 metros de altura',
  'O olho humano √© capaz de distinguir mais de 10 milh√µes de cores',
  'A cidade de Veneza, na It√°lia, √© formada por 118 ilhas',
  'A Mona Lisa √© o quadro mais famoso do mundo',
  'O cora√ß√£o bate em m√©dia 100.000 vezes por dia',
  'O elefante √© o maior animal terrestre',
  'Um raio pode chegar a uma temperatura de 30.000 graus Celsius.',
  'A lua √© o √∫nico sat√©lite natural da Terra.',
  'A √°gua √© o √∫nico elemento que √© encontrado naturalmente na natureza em tr√™s estados diferentes: l√≠quido, s√≥lido e gasoso.',
  'O c√©rebro humano pesa cerca de 1,3 kg.',
  'O nariz humano √© capaz de distinguir mais de 1 trilh√£o de cheiros diferentes.',
  'A cidade mais populosa do mundo √© T√≥quio, com uma popula√ß√£o de mais de 37 milh√µes de pessoas.',
  'O diamante √© a subst√¢ncia mais dura conhecida pelo homem.',
  'O cora√ß√£o humano bate cerca de 100.000 vezes por dia.',
  'A baleia-azul √© o maior animal do planeta, podendo chegar a medir mais de 30 metros de comprimento.',
  'O Sol √© uma estrela e est√° localizado a cerca de 149,6 milh√µes de quil√¥metros da Terra.',
  'O mel √© o √∫nico alimento que n√£o estraga.',
  'O olho humano √© capaz de distinguir mais de 10 milh√µes de cores diferentes.',
  'O crocodilo √© capaz de sobreviver por mais de um ano sem comer.',
  'O territ√≥rio da R√∫ssia √© o maior do mundo, com mais de 17 milh√µes de quil√¥metros quadrados.',
  'A barata √© capaz de sobreviver por mais de uma semana sem a cabe√ßa.',
  'O pinguim √© a √∫nica ave que √© capaz de nadar, mas n√£o voar.',
  'O canguru √© capaz de pular at√© 3 vezes a sua pr√≥pria altura.',
  'O Planeta Terra tem cerca de 4,5 bilh√µes de anos.',
  'O peixe-palha√ßo √© capaz de mudar de sexo ao longo da vida, podendo nascer macho e depois se tornar f√™mea.',
  'O Google √© o site mais visitado do mundo.',
  'A banana √© a fruta mais consumida no mundo.',
  'O recorde mundial de velocidade em terra √© de 1.609 km/h, alcan√ßado pelo carro Bloodhound SSC.',
  'O corvo √© um dos poucos animais que √© capaz de fabricar e utilizar ferramentas.',
  'A Gran Pir√¢mide de Giz√©, no Egito, √© a √∫nica das Sete Maravilhas do Mundo Antigo que ainda existe.',
  'Aves t√™m um √≥rg√£o chamado pipoqueira que as ajuda a digerir alimentos duros como sementes.',
  'Os buracos negros s√£o regi√µes do espa√ßo onde a gravidade √© t√£o forte que nem a luz consegue escapar.',
  'O tatu-bola √© capaz de se enrolar completamente em uma bola para se proteger dos predadores.',
  'O Google foi criado em 1996 como um projeto de pesquisa de doutorado na Universidade de Stanford.',
  'A cidade de Istambul, na Turquia, √© a √∫nica cidade que est√° situada em dois continentes: Europa e √Åsia.',
  'O elefante √© o √∫nico animal que √© capaz de se reconhecer em um espelho.',
  'O tigre √© o maior felino do mundo.',
  'A velocidade da luz √© de aproximadamente 299.792.458 metros por segundo.',
  'A Ant√°rtida √© o continente mais frio do planeta, com temperaturas que podem chegar a -89,2 graus Celsius.',
  'O besouro rinoceronte √© capaz de suportar mais de 850 vezes o seu pr√≥prio peso.',
  'O maior animal terrestre do planeta √© o elefante-africano.',
  'O voo comercial mais longo do mundo √© feito entre Singapura e Nova York, com uma dura√ß√£o de mais de 18 horas.',
  'O urso polar √© o √∫nico urso que √© capaz de viver exclusivamente em regi√µes de gelo.',
  'O Monte Everest √© a montanha mais alta do mundo, com uma altitude de 8.848 metros.',
  'O caranguejo-aranha-japon√™s √© o maior artr√≥pode do mundo, podendo medir at√© 3,8 metros de comprimento.',
  'O planeta V√™nus √© o mais quente do Sistema Solar, com uma temperatura m√©dia de 462 graus Celsius.',
  'O bico do pelicano pode comportar at√© 13 litros de √°gua.',
  'O deserto do Saara √© o maior deserto quente do mundo.',
  'O rinoceronte-branco √© o segundo maior animal terrestre do mundo, perdendo apenas para o elefante.',
  'O cora√ß√£o da baleia-azul √© t√£o grande que um ser humano adulto poderia nadar atrav√©s das suas art√©rias.',
  'O lobo √© o animal selvagem mais amplamente distribu√≠do do mundo.',
  'O quetzal √© a ave nacional da Guatemala.',
  'O animal que tem o maior tempo de vida √© a tartaruga-gigante-das-gal√°pagos, que pode viver mais de 150 anos.',
  'O hipop√≥tamo √© capaz de ficar submerso na √°gua por at√© 5 minutos.',
  'A Grande Barreira de Corais √© o maior sistema de recifes de coral do mundo.',
  'O crocodilo de √°gua salgada √© o maior r√©ptil do mundo, podendo chegar a medir mais de 7 metros de comprimento.',
  'O sistema nervoso humano √© capaz de transmitir sinais a uma velocidade de at√© 400 km/h.',
  'O nome completo do personagem Mickey Mouse √© Michael Theodore Mouse.',
  'A m√∫sica √© capaz de ativar diversas √°reas do c√©rebro humano.',
  'O P√≥lo Norte √© o ponto mais ao norte da Terra.',
  'O agente secreto mais famoso do mundo √© James Bond.',
  'O joelho humano √© a articula√ß√£o mais complexa do corpo humano.',
  'O estudo do comportamento humano √© chamado de psicologia.',
  'A girafa √© o animal mais alto do mundo, podendo chegar a medir mais de 5 metros de altura.',
  'O orvalho √© formado pela condensa√ß√£o do vapor de √°gua que se encontra no ar.',
  'A l√≠ngua mais falada no mundo √© o Mandarim, seguido pelo Espanhol, Ingl√™s, Hindi e √Årabe.',
  'As estrelas do mar n√£o t√™m c√©rebros, mas t√™m olhos na ponta de cada bra√ßo.',
  'A luz leva aproximadamente 8 minutos para viajar do Sol at√© a Terra.',
  'O cora√ß√£o humano bate cerca de 100.000 vezes por dia.',
  'O maior mam√≠fero do mundo √© a baleia-azul, podendo chegar a medir 30 metros de comprimento.',
  'A cidade mais populosa do mundo √© T√≥quio, no Jap√£o, com mais de 37 milh√µes de habitantes.',
  'As bact√©rias encontradas no intestino humano podem pesar at√© 2 kg.',
  'O pa√≠s mais populoso do mundo √© a China, com mais de 1,4 bilh√µes de habitantes.',
  'O rel√¢mpago pode aquecer o ar a uma temperatura cinco vezes mais quente que a superf√≠cie do Sol.',
  'A √°gua cobre aproximadamente 71% da superf√≠cie da Terra.',
  'O maior vulc√£o do sistema solar √© o Monte Olimpo, em Marte, que tem tr√™s vezes a altura do Monte Everest.',
  'Os pandas gigantes s√£o nativos apenas da China.',
  'A Ant√°rtida √© o lugar mais frio da Terra, com temperaturas que podem chegar a -90¬∞C.',
  'Apenas 5% do oceano j√° foi explorado pelos seres humanos.',
  'O riso reduz o estresse, fortalece o sistema imunol√≥gico e melhora a sa√∫de mental.',
  'A maior ilha do mundo √© a Groenl√¢ndia, que √© cerca de 14 vezes maior que a Inglaterra.',
  'As unhas das m√£os crescem mais rapidamente do que as dos p√©s.',
  'O ponto mais profundo do oceano √© a Fossa das Marianas, que tem cerca de 11 km de profundidade.',
  'O deserto do Saara √© o maior deserto quente do mundo, cobrindo uma √°rea de 9,2 milh√µes de km¬≤.',
  'A abelha rainha pode viver at√© 5 anos, enquanto as abelhas oper√°rias vivem apenas algumas semanas.',
  'O c√©rebro humano tem capacidade para armazenar at√© 2,5 petabytes de informa√ß√£o.',
  'O rio Amazonas √© o rio mais longo do mundo, com cerca de 6.400 km de extens√£o.',
  'As formigas podem levantar at√© 50 vezes o seu pr√≥prio peso.',
  'O maior animal terrestre √© o elefante africano, podendo pesar at√© 12 toneladas.',
  'O maior desfiladeiro do mundo √© o Grand Canyon, nos Estados Unidos, com cerca de 446 km de comprimento.',
  'O sangue humano √© composto por cerca de 55% de plasma e 45% de c√©lulas.',
  'O arco-√≠ris pode ser visto apenas quando o sol est√° brilhando e chovendo ao mesmo tempo.',
  'Os olhos de um avestruz s√£o maiores do que o seu c√©rebro.',
  'A velocidade da luz √© de cerca de 299.792.',
];

// Fun√ß√£o para escolher uma curiosidade aleat√≥ria
function escolherCuriosidade() {
  const indice = Math.floor(Math.random() * curiosidades.length);
  return curiosidades[indice];
}

// Comando /curiosidade
bot.onText(/\/curiosidade/, (msg) => {
  const curiosidade = escolherCuriosidade();
  const mensagem = `üîç *Voc√™ sabia?* üîç\n\n"${curiosidade}"\n\nüí° Voc√™ sabia disso, @${msg.from.username}? `;
  bot.sendMessage(msg.chat.id, mensagem, {reply_to_message_id: msg.message_id, parse_mode: 'Markdown'});
});





























function initializeMainModule() {
    return bot;
}

module.exports = initializeMainModule;



